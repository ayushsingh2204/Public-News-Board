{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\priyankani\\\\Desktop\\\\Mega_Project\\\\User_Func_Integrated\\\\Frontend\\\\src\\\\component\\\\Admin\\\\NewsList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { getAll } from \"../../services/NewsServicep/NewsServicep\";\nimport { Box, Grommet, Header, Table, TableBody, TableCell, TableHeader, ResponsiveContext, TableRow, Image, Text, Heading, Grid, Card } from \"grommet\";\nimport { grommet } from \"grommet/themes\";\nexport const NewsList = () => {\n  _s();\n\n  const [news, setNews] = useState();\n  const size = useContext(ResponsiveContext);\n  useEffect(() => {\n    async function retrieveNews() {\n      await getAll().then(result => setNews(result));\n      console.log(news);\n    }\n\n    retrieveNews();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // const CollapsableNav = () => (\n    _jsxDEV(Grommet, {\n      theme: grommet,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        columns: size !== \"small\" ? \"large\" : \"100%\",\n        gap: \"small\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          gap: \"20px\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            basis: \"full\",\n            pad: \"medium\",\n            width: \"full\",\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              size: \"small\",\n              textAlign: \"center\",\n              children: \"All News\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 11\n            }, this), news && news.map((newslist, index) => /*#__PURE__*/_jsxDEV(Card, {\n              direction: \"row\",\n              height: \"10vh\",\n              width: \"medium\",\n              alignSelf: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Image, {\n                src: `../images/${newslist && newslist.Image}`,\n                width: \"30%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), \"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n                to: `/FullNews/${newslist.id}`,\n                children: newslist.NewsTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(NewsList, \"8tISjESjSZt3cAla8Kf/40OfTQs=\");\n\n_c = NewsList;\nexport default NewsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsList\");","map":{"version":3,"sources":["C:/Users/priyankani/Desktop/Mega_Project/User_Func_Integrated/Frontend/src/component/Admin/NewsList.js"],"names":["React","useState","useEffect","useContext","Link","NavLink","getAll","Box","Grommet","Header","Table","TableBody","TableCell","TableHeader","ResponsiveContext","TableRow","Image","Text","Heading","Grid","Card","grommet","NewsList","news","setNews","size","retrieveNews","then","result","console","log","map","newslist","index","id","NewsTitle"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AAEA,SAASC,IAAT,EAAeC,OAAf,QAA8B,kBAA9B;AAEA,SAASC,MAAT,QAAuB,0CAAvB;AAEA,SACEC,GADF,EAEEC,OAFF,EAGEC,MAHF,EAIEC,KAJF,EAKEC,SALF,EAMEC,SANF,EAOEC,WAPF,EAQEC,iBARF,EASEC,QATF,EAUEC,KAVF,EAWEC,IAXF,EAYEC,OAZF,EAaEC,IAbF,EAcEC,IAdF,QAeO,SAfP;AAgBA,SAASC,OAAT,QAAwB,gBAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,EAAhC;AACA,QAAMwB,IAAI,GAAGtB,UAAU,CAACW,iBAAD,CAAvB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAewB,YAAf,GAA8B;AAC5B,YAAMpB,MAAM,GAAGqB,IAAT,CAAeC,MAAD,IAAYJ,OAAO,CAACI,MAAD,CAAjC,CAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACD;;AACDG,IAAAA,YAAY;AACb,GANQ,EAMN,EANM,CAAT;AAQA;AAAA;AACE;AACA,YAAC,OAAD;AAAS,MAAA,KAAK,EAAEL,OAAhB;AAAA,6BAyCE,QAAC,IAAD;AAAM,QAAA,OAAO,EAAEI,IAAI,KAAK,OAAT,GAAmB,OAAnB,GAA6B,MAA5C;AAAoD,QAAA,GAAG,EAAC,OAAxD;AAAA,+BACA,QAAC,IAAD;AAAM,UAAA,GAAG,EAAC,MAAV;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,KAAK,EAAC,MAAX;AAAkB,YAAA,GAAG,EAAC,QAAtB;AAA+B,YAAA,KAAK,EAAC,MAArC;AAA4C,YAAA,KAAK,EAAC,QAAlD;AAAA,oCACE,QAAC,OAAD;AAAS,cAAA,IAAI,EAAC,OAAd;AAAsB,cAAA,SAAS,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAKGF,IAAI,IACHA,IAAI,CAACQ,GAAL,CAAS,CAACC,QAAD,EAAWC,KAAX,kBACP,QAAC,IAAD;AAEE,cAAA,SAAS,EAAC,KAFZ;AAGE,cAAA,MAAM,EAAC,MAHT;AAIE,cAAA,KAAK,EAAC,QAJR;AAKE,cAAA,SAAS,EAAC,QALZ;AAAA,sCAOE,QAAC,KAAD;AACE,gBAAA,GAAG,EAAG,aAAYD,QAAQ,IAAIA,QAAQ,CAAChB,KAAM,EAD/C;AAEE,gBAAA,KAAK,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,sBAPF,mCAYE,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAG,aAAYgB,QAAQ,CAACE,EAAG,EAAnC;AAAA,0BACGF,QAAQ,CAACG;AADZ;AAAA;AAAA;AAAA;AAAA,sBAZF;AAAA,eACOF,KADP;AAAA;AAAA;AAAA;AAAA,oBADF,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAzCF;AAAA;AAAA;AAAA;AAAA;AAFF;AA0ED,CAtFM;;GAAMX,Q;;KAAAA,Q;AAwFb,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nimport { getAll } from \"../../services/NewsServicep/NewsServicep\";\r\n\r\nimport {\r\n  Box,\r\n  Grommet,\r\n  Header,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHeader,\r\n  ResponsiveContext,\r\n  TableRow,\r\n  Image,\r\n  Text,\r\n  Heading,\r\n  Grid,\r\n  Card,\r\n} from \"grommet\";\r\nimport { grommet } from \"grommet/themes\";\r\n\r\nexport const NewsList = () => {\r\n  const [news, setNews] = useState();\r\n  const size = useContext(ResponsiveContext);\r\n\r\n  useEffect(() => {\r\n    async function retrieveNews() {\r\n      await getAll().then((result) => setNews(result));\r\n      console.log(news);\r\n    }\r\n    retrieveNews();\r\n  }, []);\r\n\r\n  return (\r\n    // const CollapsableNav = () => (\r\n    <Grommet theme={grommet}>\r\n      {/* <Box\r\n        width=\"100vw\"\r\n        height=\"100vh\"\r\n        alignContent=\"center\"\r\n        pad=\"large\"\r\n        overflow=\"auto\"\r\n      >\r\n        <Table>\r\n          <TableHeader>\r\n            <TableRow>\r\n              <TableCell scope=\"col\" border=\"bottom\">\r\n                <strong> Image </strong>\r\n              </TableCell>\r\n              <TableCell scope=\"col\" border=\"bottom\">\r\n                <strong> News</strong>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {news &&\r\n              news.map((newslist, i) => (\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <Image\r\n                      src={`../../images/${newslist && newslist.Image}`}\r\n                      width=\"20%\"\r\n                    />\r\n\r\n                    \r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Link to={`/FullNews/${newslist.id}`}>\r\n                      {newslist.NewsTitle}\r\n                    </Link>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Box> */}\r\n      <Grid columns={size !== \"small\" ? \"large\" : \"100%\"} gap=\"small\">\r\n      <Grid gap=\"20px\">\r\n        <Box basis=\"full\" pad=\"medium\" width=\"full\" align=\"center\">\r\n          <Heading size=\"small\" textAlign=\"center\">\r\n            All News\r\n          </Heading>\r\n\r\n          {news &&\r\n            news.map((newslist, index) => (\r\n              <Card\r\n                key={index}\r\n                direction=\"row\"\r\n                height=\"10vh\"\r\n                width=\"medium\"\r\n                alignSelf=\"center\"\r\n              >\r\n                <Image\r\n                  src={`../images/${newslist && newslist.Image}`}\r\n                  width=\"30%\"\r\n                ></Image>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                <Link to={`/FullNews/${newslist.id}`}>\r\n                  {newslist.NewsTitle}\r\n                </Link>\r\n              </Card>\r\n            ))}\r\n        </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Grommet>\r\n  );\r\n};\r\n\r\nexport default NewsList;\r\n"]},"metadata":{},"sourceType":"module"}