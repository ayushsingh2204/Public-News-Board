{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\React Gormmet\\\\react-gormmet\\\\src\\\\component\\\\adminAccept.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Box, CardFooter, Card, CardBody, Grid, Text, Button, CardHeader, ResponsiveContext } from 'grommet';\nimport { GetUser } from '../call/UserCall';\nimport { Favorite, ShareOption } from 'grommet-icons';\n\nfunction AdminAccept() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const size = useContext(ResponsiveContext);\n  useEffect(async () => {\n    await GetUser().then(result => setUsers(result));\n  }, []);\n  console.log(users);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: \"100vw\",\n    height: \"100vh\",\n    alignContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      columns: size !== 'small' ? 'small' : '100%',\n      gap: \"small\",\n      children: users.map((user, i) => {\n        //       <Card  height=\"small\" width=\"small\" background=\"light-1\">\n        //       <CardHeader pad=\"medium\">Request Permission</CardHeader>\n        //     <CardBody pad=\"medium\">{user.email}</CardBody>\n        //       <CardFooter pad={{horizontal: \"small\"}} background=\"light-2\">   \n        //       <Button\n        //       icon={<Favorite color=\"red\" />}\n        //       hoverIndicator\n        //     />\n        //     <Button icon={<ShareOption color=\"plain\" />} hoverIndicator />\n        //     </CardFooter>\n        // </Card>\n        {}\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 8\n  }, this);\n}\n\n_s(AdminAccept, \"7M10Zet2CNVU6TRh2o9shTwMcKY=\");\n\n_c = AdminAccept;\nexport default AdminAccept;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminAccept\");","map":{"version":3,"sources":["D:/React Gormmet/react-gormmet/src/component/adminAccept.js"],"names":["React","useEffect","useState","useContext","Box","CardFooter","Card","CardBody","Grid","Text","Button","CardHeader","ResponsiveContext","GetUser","Favorite","ShareOption","AdminAccept","users","setUsers","size","then","result","console","log","map","user","i"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,QAAhC,EAA0CC,IAA1C,EAA+CC,IAA/C,EAAqDC,MAArD,EAA6DC,UAA7D,EAAyEC,iBAAzE,QAAkG,SAAlG;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,eAAtC;;AAKA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBhB,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAMiB,IAAI,GAAGhB,UAAU,CAACS,iBAAD,CAAvB;AACEX,EAAAA,SAAS,CAAC,YAAU;AAChB,UAAMY,OAAO,GAAGO,IAAV,CAAeC,MAAM,IAAEH,QAAQ,CAACG,MAAD,CAA/B,CAAN;AAGA,GAJK,EAIJ,EAJI,CAAT;AAKDC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACC,sBACG,QAAC,GAAD;AAAK,IAAA,KAAK,EAAC,OAAX;AAAmB,IAAA,MAAM,EAAC,OAA1B;AAAkC,IAAA,YAAY,EAAC,QAA/C;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAEE,IAAI,KAAK,OAAT,GAAmB,OAAnB,GAA6B,MAA5C;AAAoD,MAAA,GAAG,EAAC,OAAxD;AAAA,gBACIF,KAAK,CAACO,GAAN,CAAU,CAACC,IAAD,EAAMC,CAAN,KAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAE;AACG,OAbA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADH;AAqBH;;GA9BQV,W;;KAAAA,W;AAgCT,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\r\nimport { Box, CardFooter, Card, CardBody, Grid,Text, Button, CardHeader, ResponsiveContext } from 'grommet'\r\nimport { GetUser } from '../call/UserCall';\r\nimport { Favorite, ShareOption } from 'grommet-icons';\r\n\r\n\r\n\r\n\r\nfunction AdminAccept() {\r\n  const [users,setUsers]=useState([]);\r\n  const size = useContext(ResponsiveContext);\r\n    useEffect(async ()=>{\r\n        await GetUser().then(result=>setUsers(result)); \r\n       \r\n      \r\n       },[])\r\n   console.log(users)\r\n    return (\r\n       <Box width='100vw' height='100vh' alignContent='center'>\r\n         <Grid columns={size !== 'small' ? 'small' : '100%'} gap=\"small\">\r\n            {users.map((user,i)=>{\r\n        //       <Card  height=\"small\" width=\"small\" background=\"light-1\">\r\n        //       <CardHeader pad=\"medium\">Request Permission</CardHeader>\r\n        //     <CardBody pad=\"medium\">{user.email}</CardBody>\r\n        //       <CardFooter pad={{horizontal: \"small\"}} background=\"light-2\">   \r\n        //       <Button\r\n        //       icon={<Favorite color=\"red\" />}\r\n        //       hoverIndicator\r\n        //     />\r\n        //     <Button icon={<ShareOption color=\"plain\" />} hoverIndicator />\r\n        //     </CardFooter>\r\n        // </Card>\r\n        {}\r\n            })}\r\n\r\n            </Grid>\r\n       </Box>\r\n    )\r\n}\r\n\r\nexport default AdminAccept\r\n"]},"metadata":{},"sourceType":"module"}