{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { Component } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { createTextMaskInputElement } from 'text-mask-core';\nimport { createAutoCorrectedDatePipe, emailMask, createNumberMask } from 'text-mask-addons';\nimport { DropInput } from '../DropInput';\nimport { transformMaskedValue } from './utils';\nimport { createMinMaxInputPipe, maskedNumberValue } from './minMaxNumberPipe';\n/** A masked Input control with an optional drop button with the specified dropContent<br/>\n * `import { MakedInput } from 'grommet-controls';`<br/>\n * `<MakedInput mask={...} />`<br/>\n */\n\nclass MaskedInput extends Component {\n  constructor() {\n    super(...arguments);\n    this.textMaskInputElement = null;\n    this.inputControlRef = React.createRef();\n\n    this.onInput = event => {\n      const {\n        onInput\n      } = this.props;\n\n      if (this.textMaskInputElement) {\n        this.textMaskInputElement.update(event.target.value);\n      }\n\n      if (onInput) {\n        onInput(event);\n      }\n    };\n  }\n\n  initTextMask() {\n    const {\n      props,\n      props: {\n        value\n      }\n    } = this;\n\n    if (props.mask && this.inputControlRef) {\n      this.textMaskInputElement = createTextMaskInputElement(Object.assign({\n        // eslint-disable-next-line react/no-find-dom-node\n        inputElement: findDOMNode(this.inputControlRef.current).getElementsByTagName('input')[0]\n      }, props));\n      this.textMaskInputElement.update(value);\n    }\n  }\n\n  componentDidMount() {\n    this.initTextMask();\n  }\n\n  componentDidUpdate() {\n    this.initTextMask();\n  }\n\n  maskedValue(value) {\n    if (value === undefined) {\n      return undefined;\n    }\n\n    const {\n      mask\n    } = this.props;\n\n    if (value) {\n      const conformed = transformMaskedValue(value, mask, this.props);\n      return conformed;\n    }\n\n    return value;\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      defaultValue,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      value,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      mask,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      guide,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      showMask,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      pipe,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      placeholderChar,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      keepCharPositions\n    } = _a,\n          rest = __rest(_a, [\"defaultValue\", \"value\", \"mask\", \"guide\", \"showMask\", \"pipe\", \"placeholderChar\", \"keepCharPositions\"]);\n\n    return React.createElement(DropInput, Object.assign({\n      ref: this.inputControlRef,\n      value: this.maskedValue(value),\n      defaultValue: this.maskedValue(defaultValue),\n      onInput: this.onInput\n    }, rest));\n  }\n\n}\n\nMaskedInput.defaultProps = {\n  type: 'text',\n  guide: true,\n  showMask: false,\n  placeholderChar: '\\u2000'\n};\nMaskedInput.alphabetic = /[A-Z]/i;\nMaskedInput.placeholderChars = {\n  whitespace: '\\u2000',\n  underscore: '_'\n};\nMaskedInput.digit = /\\d/;\nMaskedInput.createAutoCorrectedDatePipe = createAutoCorrectedDatePipe;\nMaskedInput.emailMask = emailMask;\nMaskedInput.createNumberMask = createNumberMask;\nMaskedInput.createMinMaxInputPipe = createMinMaxInputPipe;\nMaskedInput.maskedNumberValue = maskedNumberValue;\nexport { MaskedInput };","map":{"version":3,"sources":["../../../src/components/MaskedInput/MaskedInput.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAP,IAAgB,SAAhB,QAAiC,OAAjC;AACA,SAAS,WAAT,QAA4B,WAA5B;AACA,SAAS,0BAAT,QAA2C,gBAA3C;AACA,SACE,2BADF,EAEE,SAFF,EAGE,gBAHF,QAIO,kBAJP;AAKA,SAAS,SAAT,QAA0B,cAA1B;AACA,SAAS,oBAAT,QAAqC,SAArC;AACA,SAAS,qBAAT,EAAgC,iBAAhC,QAAyD,oBAAzD;AAGA;;;AAGG;;AACH,MAAM,WAAN,SAA0B,SAA1B,CAAsD;AAAtD,EAAA,WAAA,GAAA;;AA2BE,SAAA,oBAAA,GAAuB,IAAvB;AAEA,SAAA,eAAA,GAAkB,KAAK,CAAC,SAAN,EAAlB;;AAEA,SAAA,OAAA,GAAU,KAAK,IAAG;AAChB,YAAM;AAAE,QAAA;AAAF,UAAc,KAAK,KAAzB;;AACA,UAAI,KAAK,oBAAT,EAA+B;AAC7B,aAAK,oBAAL,CAA0B,MAA1B,CAAiC,KAAK,CAAC,MAAN,CAAa,KAA9C;AACD;;AACD,UAAI,OAAJ,EAAa;AACX,QAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,KARD;AA4ED;;AAlEC,EAAA,YAAY,GAAA;AACV,UAAM;AACJ,MAAA,KADI;AAEJ,MAAA,KAAK,EAAE;AAAE,QAAA;AAAF;AAFH,QAGF,IAHJ;;AAIA,QAAI,KAAK,CAAC,IAAN,IAAc,KAAK,eAAvB,EAAwC;AACtC,WAAK,oBAAL,GAA4B,0BAA0B,CAAA,MAAA,CAAA,MAAA,CAAA;AACpD;AACA,QAAA,YAAY,EAAG,WAAW,CACxB,KAAK,eAAL,CAAqB,OADG,CAAX,CAEQ,oBAFR,CAE6B,OAF7B,EAEsC,CAFtC;AAFqC,OAAA,EAKjD,KALiD,CAAA,CAAtD;AAOA,WAAK,oBAAL,CAA0B,MAA1B,CAAiC,KAAjC;AACD;AACF;;AAED,EAAA,iBAAiB,GAAA;AACf,SAAK,YAAL;AACD;;AAED,EAAA,kBAAkB,GAAA;AAChB,SAAK,YAAL;AACD;;AAED,EAAA,WAAW,CAAC,KAAD,EAAM;AACf,QAAI,KAAK,KAAK,SAAd,EAAyB;AACvB,aAAO,SAAP;AACD;;AACD,UAAM;AAAE,MAAA;AAAF,QAAW,KAAK,KAAtB;;AACA,QAAI,KAAJ,EAAW;AACT,YAAM,SAAS,GAAG,oBAAoB,CAAC,KAAD,EAAQ,IAAR,EAAc,KAAK,KAAnB,CAAtC;AACA,aAAO,SAAP;AACD;;AACD,WAAO,KAAP;AACD;;AAED,EAAA,MAAM,GAAA;AACJ,UAAM,EAAA,GAiBF,KAAK,KAjBT;AAAA,UAAM;AACJ,MAAA,YADI;AAEJ;AACA,MAAA,KAHI;AAIJ;AACA,MAAA,IALI;AAMJ;AACA,MAAA,KAPI;AAQJ;AACA,MAAA,QATI;AAUJ;AACA,MAAA,IAXI;AAYJ;AACA,MAAA,eAbI;AAcJ;AACA,MAAA;AAfI,QAea,EAfnB;AAAA,UAgBK,IAAI,GAAA,MAAA,CAAA,EAAA,EAhBH,CAAA,cAAA,EAAA,OAAA,EAAA,MAAA,EAAA,OAAA,EAAA,UAAA,EAAA,MAAA,EAAA,iBAAA,EAAA,mBAAA,CAgBG,CAhBT;;AAkBA,WACE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,MAAA,CAAA,MAAA,CAAA;AACR,MAAA,GAAG,EAAE,KAAK,eADF;AAER,MAAA,KAAK,EAAE,KAAK,WAAL,CAAiB,KAAjB,CAFC;AAGR,MAAA,YAAY,EAAE,KAAK,WAAL,CAAiB,YAAjB,CAHN;AAIR,MAAA,OAAO,EAAE,KAAK;AAJN,KAAA,EAKJ,IALI,CAAV,CADF;AASD;;AA1GmD;;AAC7C,WAAA,CAAA,YAAA,GAAe;AACpB,EAAA,IAAI,EAAE,MADc;AAEpB,EAAA,KAAK,EAAE,IAFa;AAGpB,EAAA,QAAQ,EAAE,KAHU;AAIpB,EAAA,eAAe,EAAE;AAJG,CAAf;AAOA,WAAA,CAAA,UAAA,GAAa,QAAb;AAEA,WAAA,CAAA,gBAAA,GAAmB;AACxB,EAAA,UAAU,EAAE,QADY;AAExB,EAAA,UAAU,EAAE;AAFY,CAAnB;AAKA,WAAA,CAAA,KAAA,GAAQ,IAAR;AAEA,WAAA,CAAA,2BAAA,GAA8B,2BAA9B;AAEA,WAAA,CAAA,SAAA,GAAY,SAAZ;AAEA,WAAA,CAAA,gBAAA,GAAmB,gBAAnB;AAEA,WAAA,CAAA,qBAAA,GAAwB,qBAAxB;AAEA,WAAA,CAAA,iBAAA,GAAoB,iBAApB;AAoFT,SAAS,WAAT","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { Component } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { createTextMaskInputElement } from 'text-mask-core';\nimport { createAutoCorrectedDatePipe, emailMask, createNumberMask, } from 'text-mask-addons';\nimport { DropInput } from '../DropInput';\nimport { transformMaskedValue } from './utils';\nimport { createMinMaxInputPipe, maskedNumberValue } from './minMaxNumberPipe';\n/** A masked Input control with an optional drop button with the specified dropContent<br/>\n * `import { MakedInput } from 'grommet-controls';`<br/>\n * `<MakedInput mask={...} />`<br/>\n */\nclass MaskedInput extends Component {\n    constructor() {\n        super(...arguments);\n        this.textMaskInputElement = null;\n        this.inputControlRef = React.createRef();\n        this.onInput = event => {\n            const { onInput } = this.props;\n            if (this.textMaskInputElement) {\n                this.textMaskInputElement.update(event.target.value);\n            }\n            if (onInput) {\n                onInput(event);\n            }\n        };\n    }\n    initTextMask() {\n        const { props, props: { value }, } = this;\n        if (props.mask && this.inputControlRef) {\n            this.textMaskInputElement = createTextMaskInputElement(Object.assign({ \n                // eslint-disable-next-line react/no-find-dom-node\n                inputElement: findDOMNode(this.inputControlRef.current).getElementsByTagName('input')[0] }, props));\n            this.textMaskInputElement.update(value);\n        }\n    }\n    componentDidMount() {\n        this.initTextMask();\n    }\n    componentDidUpdate() {\n        this.initTextMask();\n    }\n    maskedValue(value) {\n        if (value === undefined) {\n            return undefined;\n        }\n        const { mask } = this.props;\n        if (value) {\n            const conformed = transformMaskedValue(value, mask, this.props);\n            return conformed;\n        }\n        return value;\n    }\n    render() {\n        const _a = this.props, { defaultValue, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        value, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        mask, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        guide, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        showMask, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        pipe, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        placeholderChar, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        keepCharPositions } = _a, rest = __rest(_a, [\"defaultValue\", \"value\", \"mask\", \"guide\", \"showMask\", \"pipe\", \"placeholderChar\", \"keepCharPositions\"]);\n        return (React.createElement(DropInput, Object.assign({ ref: this.inputControlRef, value: this.maskedValue(value), defaultValue: this.maskedValue(defaultValue), onInput: this.onInput }, rest)));\n    }\n}\nMaskedInput.defaultProps = {\n    type: 'text',\n    guide: true,\n    showMask: false,\n    placeholderChar: '\\u2000',\n};\nMaskedInput.alphabetic = /[A-Z]/i;\nMaskedInput.placeholderChars = {\n    whitespace: '\\u2000',\n    underscore: '_',\n};\nMaskedInput.digit = /\\d/;\nMaskedInput.createAutoCorrectedDatePipe = createAutoCorrectedDatePipe;\nMaskedInput.emailMask = emailMask;\nMaskedInput.createNumberMask = createNumberMask;\nMaskedInput.createMinMaxInputPipe = createMinMaxInputPipe;\nMaskedInput.maskedNumberValue = maskedNumberValue;\nexport { MaskedInput };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFza2VkSW5wdXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9NYXNrZWRJbnB1dC9NYXNrZWRJbnB1dC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQSxPQUFPLEtBQUssRUFBRSxFQUFFLFNBQVMsRUFBRSxNQUFNLE9BQU8sQ0FBQztBQUN6QyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ3hDLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzVELE9BQU8sRUFDTCwyQkFBMkIsRUFDM0IsU0FBUyxFQUNULGdCQUFnQixHQUNqQixNQUFNLGtCQUFrQixDQUFDO0FBQzFCLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDekMsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sU0FBUyxDQUFDO0FBQy9DLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRzlFOzs7R0FHRztBQUNILE1BQU0sV0FBWSxTQUFRLFNBQTRCO0lBQXREOztRQTJCRSx5QkFBb0IsR0FBRyxJQUFJLENBQUM7UUFFNUIsb0JBQWUsR0FBRyxLQUFLLENBQUMsU0FBUyxFQUFvQixDQUFDO1FBRXRELFlBQU8sR0FBRyxLQUFLLENBQUMsRUFBRTtZQUNoQixNQUFNLEVBQUUsT0FBTyxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztZQUMvQixJQUFJLElBQUksQ0FBQyxvQkFBb0IsRUFBRTtnQkFDN0IsSUFBSSxDQUFDLG9CQUFvQixDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO2FBQ3REO1lBQ0QsSUFBSSxPQUFPLEVBQUU7Z0JBQ1gsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO2FBQ2hCO1FBQ0gsQ0FBQyxDQUFDO0lBb0VKLENBQUM7SUFsRUMs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"]},"metadata":{},"sourceType":"module"}