{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\React Gormmet\\\\react-gormmet\\\\src\\\\component\\\\Login.js\";\nimport React from 'react';\nimport { FormField, TextInput, Box, Button, Form } from 'grommet'; // This example shows a way to perform validation across multiple fields.\n\nexport const ULogin = () => {\n  const HandleData = event => {\n    console.log(\"reached\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    al: true,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(FormField, {\n        name: \"name\",\n        htmlfor: \"text-input-id\",\n        label: \"Name\",\n        children: /*#__PURE__*/_jsxDEV(TextInput, {\n          id: \"text-input-id\",\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        direction: \"row\",\n        gap: \"medium\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          primary: true,\n          label: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"reset\",\n          label: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 6\n  }, this);\n};\n_c = ULogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"ULogin\");","map":{"version":3,"sources":["D:/React Gormmet/react-gormmet/src/component/Login.js"],"names":["React","FormField","TextInput","Box","Button","Form","ULogin","HandleData","event","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,GAA/B,EAAoCC,MAApC,EAA4CC,IAA5C,QAAwD,SAAxD,C,CAOA;;AACA,OAAO,MAAMC,MAAM,GAAG,MAAM;AACxB,QAAMC,UAAU,GAAEC,KAAD,IAAS;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,GAFD;;AAGH,sBACI,QAAC,GAAD;AAAK,IAAA,EAAE,MAAP;AAAA,2BACA,QAAC,IAAD;AAAA,8BACD,QAAC,SAAD;AAAW,QAAA,IAAI,EAAC,MAAhB;AAAuB,QAAA,OAAO,EAAC,eAA/B;AAA+C,QAAA,KAAK,EAAC,MAArD;AAAA,+BACI,QAAC,SAAD;AAAW,UAAA,EAAE,EAAC,eAAd;AAA8B,UAAA,IAAI,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADC,eAIC,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,KAAf;AAAqB,QAAA,GAAG,EAAC,QAAzB;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,MAA7B;AAA8B,UAAA,KAAK,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,OAAb;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcA,CAlBM;KAAMJ,M","sourcesContent":["import React from 'react';\r\nimport { FormField, TextInput, Box, Button, Form } from 'grommet';\r\n\r\n\r\n\r\n\r\n\r\n\r\n// This example shows a way to perform validation across multiple fields.\r\nexport const ULogin = () => {\r\n    const HandleData=(event)=>{\r\n        console.log(\"reached\");\r\n    }\r\n return(\r\n     <Box al>\r\n     <Form>\r\n    <FormField name=\"name\" htmlfor=\"text-input-id\" label=\"Name\">\r\n        <TextInput id=\"text-input-id\" name=\"name\" />\r\n      </FormField>\r\n      <Box direction=\"row\" gap=\"medium\">\r\n        <Button type=\"submit\" primary label=\"Submit\" />\r\n        <Button type=\"reset\" label=\"Reset\" />\r\n      </Box>\r\n    </Form>\r\n    </Box>\r\n );\r\n  \r\n};\r\n"]},"metadata":{},"sourceType":"module"}