{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.doc = void 0;\n\nvar _reactDesc = require(\"react-desc\");\n\nvar doc = function doc(Keyboard) {\n  var DocumentedKeyboard = (0, _reactDesc.describe)(Keyboard).description('A handler of keyboard key presses.').usage(\"import { Keyboard } from 'grommet';\\n<Keyboard onUp={() => {}} />\");\n  DocumentedKeyboard.propTypes = {\n    target: _reactDesc.PropTypes.oneOf(['component', 'document']).description('Where to listen for the keyboard presses.').defaultValue('component'),\n    onBackspace: _reactDesc.PropTypes.func.description('Function that will be called when the user presses the backspace key.'),\n    onComma: _reactDesc.PropTypes.func.description('Function that will be called when the user presses the comma key.'),\n    onDown: _reactDesc.PropTypes.func.description('Function that will be called when the user presses the down key.'),\n    onEnter: _reactDesc.PropTypes.func.description('Function that will be called when the user presses the enter key.'),\n    onEsc: _reactDesc.PropTypes.func.description('Function that will be called when the user presses the esc key.'),\n    onKeyDown: _reactDesc.PropTypes.func.description('Function that will be called when the user presses any key.'),\n    onLeft: _reactDesc.PropTypes.func.description('Function that will be called when the user presses the left key.'),\n    onRight: _reactDesc.PropTypes.func.description('Function that will be called when the user presses the right key.'),\n    onShift: _reactDesc.PropTypes.func.description('Function that will be called when the user presses the shift key.'),\n    onSpace: _reactDesc.PropTypes.func.description('Function that will be called when the user presses the space key.'),\n    onTab: _reactDesc.PropTypes.func.description('Function that will be called when the user presses the tab key.'),\n    onUp: _reactDesc.PropTypes.func.description('Function that will be called when the user presses the up key.')\n  };\n  return DocumentedKeyboard;\n};\n\nexports.doc = doc;","map":{"version":3,"sources":["D:/React Gormmet/react-gormmet/node_modules/grommet/components/Keyboard/doc.js"],"names":["exports","__esModule","doc","_reactDesc","require","Keyboard","DocumentedKeyboard","describe","description","usage","propTypes","target","PropTypes","oneOf","defaultValue","onBackspace","func","onComma","onDown","onEnter","onEsc","onKeyDown","onLeft","onRight","onShift","onSpace","onTab","onUp"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,GAAR,GAAc,KAAK,CAAnB;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,YAAD,CAAxB;;AAEA,IAAIF,GAAG,GAAG,SAASA,GAAT,CAAaG,QAAb,EAAuB;AAC/B,MAAIC,kBAAkB,GAAG,CAAC,GAAGH,UAAU,CAACI,QAAf,EAAyBF,QAAzB,EAAmCG,WAAnC,CAA+C,oCAA/C,EAAqFC,KAArF,CAA2F,mEAA3F,CAAzB;AACAH,EAAAA,kBAAkB,CAACI,SAAnB,GAA+B;AAC7BC,IAAAA,MAAM,EAAER,UAAU,CAACS,SAAX,CAAqBC,KAArB,CAA2B,CAAC,WAAD,EAAc,UAAd,CAA3B,EAAsDL,WAAtD,CAAkE,2CAAlE,EAA+GM,YAA/G,CAA4H,WAA5H,CADqB;AAE7BC,IAAAA,WAAW,EAAEZ,UAAU,CAACS,SAAX,CAAqBI,IAArB,CAA0BR,WAA1B,CAAsC,uEAAtC,CAFgB;AAG7BS,IAAAA,OAAO,EAAEd,UAAU,CAACS,SAAX,CAAqBI,IAArB,CAA0BR,WAA1B,CAAsC,mEAAtC,CAHoB;AAI7BU,IAAAA,MAAM,EAAEf,UAAU,CAACS,SAAX,CAAqBI,IAArB,CAA0BR,WAA1B,CAAsC,kEAAtC,CAJqB;AAK7BW,IAAAA,OAAO,EAAEhB,UAAU,CAACS,SAAX,CAAqBI,IAArB,CAA0BR,WAA1B,CAAsC,mEAAtC,CALoB;AAM7BY,IAAAA,KAAK,EAAEjB,UAAU,CAACS,SAAX,CAAqBI,IAArB,CAA0BR,WAA1B,CAAsC,iEAAtC,CANsB;AAO7Ba,IAAAA,SAAS,EAAElB,UAAU,CAACS,SAAX,CAAqBI,IAArB,CAA0BR,WAA1B,CAAsC,6DAAtC,CAPkB;AAQ7Bc,IAAAA,MAAM,EAAEnB,UAAU,CAACS,SAAX,CAAqBI,IAArB,CAA0BR,WAA1B,CAAsC,kEAAtC,CARqB;AAS7Be,IAAAA,OAAO,EAAEpB,UAAU,CAACS,SAAX,CAAqBI,IAArB,CAA0BR,WAA1B,CAAsC,mEAAtC,CAToB;AAU7BgB,IAAAA,OAAO,EAAErB,UAAU,CAACS,SAAX,CAAqBI,IAArB,CAA0BR,WAA1B,CAAsC,mEAAtC,CAVoB;AAW7BiB,IAAAA,OAAO,EAAEtB,UAAU,CAACS,SAAX,CAAqBI,IAArB,CAA0BR,WAA1B,CAAsC,mEAAtC,CAXoB;AAY7BkB,IAAAA,KAAK,EAAEvB,UAAU,CAACS,SAAX,CAAqBI,IAArB,CAA0BR,WAA1B,CAAsC,iEAAtC,CAZsB;AAa7BmB,IAAAA,IAAI,EAAExB,UAAU,CAACS,SAAX,CAAqBI,IAArB,CAA0BR,WAA1B,CAAsC,gEAAtC;AAbuB,GAA/B;AAeA,SAAOF,kBAAP;AACD,CAlBD;;AAoBAN,OAAO,CAACE,GAAR,GAAcA,GAAd","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.doc = void 0;\n\nvar _reactDesc = require(\"react-desc\");\n\nvar doc = function doc(Keyboard) {\n  var DocumentedKeyboard = (0, _reactDesc.describe)(Keyboard).description('A handler of keyboard key presses.').usage(\"import { Keyboard } from 'grommet';\\n<Keyboard onUp={() => {}} />\");\n  DocumentedKeyboard.propTypes = {\n    target: _reactDesc.PropTypes.oneOf(['component', 'document']).description('Where to listen for the keyboard presses.').defaultValue('component'),\n    onBackspace: _reactDesc.PropTypes.func.description('Function that will be called when the user presses the backspace key.'),\n    onComma: _reactDesc.PropTypes.func.description('Function that will be called when the user presses the comma key.'),\n    onDown: _reactDesc.PropTypes.func.description('Function that will be called when the user presses the down key.'),\n    onEnter: _reactDesc.PropTypes.func.description('Function that will be called when the user presses the enter key.'),\n    onEsc: _reactDesc.PropTypes.func.description('Function that will be called when the user presses the esc key.'),\n    onKeyDown: _reactDesc.PropTypes.func.description('Function that will be called when the user presses any key.'),\n    onLeft: _reactDesc.PropTypes.func.description('Function that will be called when the user presses the left key.'),\n    onRight: _reactDesc.PropTypes.func.description('Function that will be called when the user presses the right key.'),\n    onShift: _reactDesc.PropTypes.func.description('Function that will be called when the user presses the shift key.'),\n    onSpace: _reactDesc.PropTypes.func.description('Function that will be called when the user presses the space key.'),\n    onTab: _reactDesc.PropTypes.func.description('Function that will be called when the user presses the tab key.'),\n    onUp: _reactDesc.PropTypes.func.description('Function that will be called when the user presses the up key.')\n  };\n  return DocumentedKeyboard;\n};\n\nexports.doc = doc;"]},"metadata":{},"sourceType":"script"}