{"ast":null,"code":"import { conformToMask } from 'text-mask-core';\nconst strCaretTrap = '[]';\n\nconst processCaretTraps = mask => {\n  const indexes = [];\n  let indexOfCaretTrap;\n\n  while (indexOfCaretTrap = mask.indexOf(strCaretTrap), indexOfCaretTrap !== -1) {\n    // eslint-disable-line\n    indexes.push(indexOfCaretTrap);\n    mask.splice(indexOfCaretTrap, 1);\n  }\n\n  return mask;\n};\n\nexport const transformMaskedValue = (value, providedMask, props) => {\n  if (!providedMask) {\n    return value.toString();\n  }\n\n  let {\n    pipe\n  } = props;\n  let safeValue;\n\n  if (value === undefined || value === null) {\n    safeValue = '';\n  } else {\n    safeValue = value.toString();\n  }\n\n  let mask;\n\n  if (typeof providedMask === 'object' && providedMask.pipe !== undefined && providedMask.mask !== undefined) {\n    // eslint-disable-next-line no-param-reassign\n    providedMask = providedMask.mask;\n    ({\n      pipe\n    } = providedMask);\n  }\n\n  if (typeof providedMask === 'function') {\n    mask = providedMask(safeValue, Object.assign(Object.assign({}, props), {\n      pipe\n    })); // disable masking if `mask` is `false`\n\n    if (mask === false) {\n      return safeValue;\n    } // The processed mask is what we're interested in\n\n\n    mask = processCaretTraps(mask); // If the `providedMask` is not a function, we just use it as-is.\n  } else {\n    mask = providedMask;\n  }\n\n  let conformedValue = safeValue;\n  const {\n    guide,\n    placeholderChar,\n    placeholder,\n    currentCaretPosition,\n    showMask,\n    keepCharPositions\n  } = props;\n  const conformToMaskConfig = {\n    previousPlaceholder: placeholder,\n    guide,\n    placeholderChar,\n    pipe,\n    currentCaretPosition,\n    keepCharPositions\n  };\n  const conformed = conformToMask(safeValue, mask, conformToMaskConfig);\n\n  if (conformed) {\n    ({\n      conformedValue\n    } = conformed);\n  }\n\n  if (typeof pipe === 'function') {\n    const pipeResults = pipe(conformedValue, Object.assign({\n      rawValue: safeValue\n    }, conformToMaskConfig));\n\n    if (typeof pipeResults === 'string') {\n      conformedValue = pipeResults;\n    }\n  }\n\n  if (conformedValue === placeholder) {\n    conformedValue = showMask ? placeholder : '';\n  }\n\n  return conformedValue;\n};","map":{"version":3,"sources":["../../../src/components/MaskedInput/utils.ts"],"names":[],"mappings":"AAAA,SAAS,aAAT,QAA8B,gBAA9B;AAGA,MAAM,YAAY,GAAG,IAArB;;AAEA,MAAM,iBAAiB,GAAI,IAAD,IAA6B;AACrD,QAAM,OAAO,GAAG,EAAhB;AAEA,MAAI,gBAAJ;;AACA,SAAM,gBAAgB,GAAG,IAAI,CAAC,OAAL,CAAa,YAAb,CAAnB,EAA+C,gBAAgB,KAAK,CAAC,CAA3E,EAA8E;AAAE;AAC9E,IAAA,OAAO,CAAC,IAAR,CAAa,gBAAb;AACA,IAAA,IAAI,CAAC,MAAL,CAAY,gBAAZ,EAA8B,CAA9B;AACD;;AACD,SAAO,IAAP;AACD,CATD;;AAWA,OAAO,MAAM,oBAAoB,GAAG,CAClC,KADkC,EAElC,YAFkC,EAGlC,KAHkC,KAIxB;AACV,MAAI,CAAC,YAAL,EAAmB;AACjB,WAAO,KAAK,CAAC,QAAN,EAAP;AACD;;AACD,MAAI;AAAE,IAAA;AAAF,MAAW,KAAf;AACA,MAAI,SAAJ;;AACA,MAAI,KAAK,KAAK,SAAV,IAAuB,KAAK,KAAK,IAArC,EAA2C;AACzC,IAAA,SAAS,GAAG,EAAZ;AACD,GAFD,MAEO;AACL,IAAA,SAAS,GAAG,KAAK,CAAC,QAAN,EAAZ;AACD;;AACD,MAAI,IAAJ;;AACA,MACE,OAAO,YAAP,KAAwB,QAAxB,IACC,YAAgC,CAAC,IAAjC,KAA0C,SAD3C,IAEC,YAAgC,CAAC,IAAjC,KAA0C,SAH7C,EAIE;AACA;AACA,IAAA,YAAY,GAAI,YAAgC,CAAC,IAAjD;AACA,KAAC;AAAE,MAAA;AAAF,QAAW,YAAZ;AACD;;AACD,MAAI,OAAO,YAAP,KAAwB,UAA5B,EAAwC;AACtC,IAAA,IAAI,GAAG,YAAY,CAAC,SAAD,EAAU,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAO,KAAP,CAAA,EAAY;AAAE,MAAA;AAAF,KAAZ,CAAV,CAAnB,CADsC,CAGtC;;AACA,QAAI,IAAI,KAAK,KAAb,EAAoB;AAClB,aAAO,SAAP;AACD,KANqC,CAOtC;;;AACA,IAAA,IAAI,GAAG,iBAAiB,CAAC,IAAD,CAAxB,CARsC,CAStC;AACD,GAVD,MAUO;AACL,IAAA,IAAI,GAAG,YAAP;AACD;;AACD,MAAI,cAAc,GAAG,SAArB;AACA,QAAM;AACJ,IAAA,KADI;AAEJ,IAAA,eAFI;AAGJ,IAAA,WAHI;AAIJ,IAAA,oBAJI;AAKJ,IAAA,QALI;AAMJ,IAAA;AANI,MAOF,KAPJ;AASA,QAAM,mBAAmB,GAAG;AAC1B,IAAA,mBAAmB,EAAE,WADK;AAE1B,IAAA,KAF0B;AAG1B,IAAA,eAH0B;AAI1B,IAAA,IAJ0B;AAK1B,IAAA,oBAL0B;AAM1B,IAAA;AAN0B,GAA5B;AAQA,QAAM,SAAS,GAAG,aAAa,CAAC,SAAD,EAAY,IAAZ,EAAkB,mBAAlB,CAA/B;;AACA,MAAI,SAAJ,EAAe;AACb,KAAC;AAAE,MAAA;AAAF,QAAqB,SAAtB;AACD;;AACD,MAAI,OAAO,IAAP,KAAgB,UAApB,EAAgC;AAC9B,UAAM,WAAW,GAAG,IAAI,CAAC,cAAD,EAAe,MAAA,CAAA,MAAA,CAAA;AACrC,MAAA,QAAQ,EAAE;AAD2B,KAAA,EAElC,mBAFkC,CAAf,CAAxB;;AAIA,QAAI,OAAO,WAAP,KAAuB,QAA3B,EAAqC;AACnC,MAAA,cAAc,GAAG,WAAjB;AACD;AACF;;AACD,MAAI,cAAc,KAAK,WAAvB,EAAoC;AAClC,IAAA,cAAc,GAAG,QAAQ,GAAG,WAAH,GAAiB,EAA1C;AACD;;AACD,SAAO,cAAP;AACD,CAzEM","sourceRoot":"","sourcesContent":["import { conformToMask } from 'text-mask-core';\nconst strCaretTrap = '[]';\nconst processCaretTraps = (mask) => {\n    const indexes = [];\n    let indexOfCaretTrap;\n    while (indexOfCaretTrap = mask.indexOf(strCaretTrap), indexOfCaretTrap !== -1) { // eslint-disable-line\n        indexes.push(indexOfCaretTrap);\n        mask.splice(indexOfCaretTrap, 1);\n    }\n    return mask;\n};\nexport const transformMaskedValue = (value, providedMask, props) => {\n    if (!providedMask) {\n        return value.toString();\n    }\n    let { pipe } = props;\n    let safeValue;\n    if (value === undefined || value === null) {\n        safeValue = '';\n    }\n    else {\n        safeValue = value.toString();\n    }\n    let mask;\n    if (typeof providedMask === 'object' &&\n        providedMask.pipe !== undefined &&\n        providedMask.mask !== undefined) {\n        // eslint-disable-next-line no-param-reassign\n        providedMask = providedMask.mask;\n        ({ pipe } = providedMask);\n    }\n    if (typeof providedMask === 'function') {\n        mask = providedMask(safeValue, Object.assign(Object.assign({}, props), { pipe }));\n        // disable masking if `mask` is `false`\n        if (mask === false) {\n            return safeValue;\n        }\n        // The processed mask is what we're interested in\n        mask = processCaretTraps(mask);\n        // If the `providedMask` is not a function, we just use it as-is.\n    }\n    else {\n        mask = providedMask;\n    }\n    let conformedValue = safeValue;\n    const { guide, placeholderChar, placeholder, currentCaretPosition, showMask, keepCharPositions, } = props;\n    const conformToMaskConfig = {\n        previousPlaceholder: placeholder,\n        guide,\n        placeholderChar,\n        pipe,\n        currentCaretPosition,\n        keepCharPositions,\n    };\n    const conformed = conformToMask(safeValue, mask, conformToMaskConfig);\n    if (conformed) {\n        ({ conformedValue } = conformed);\n    }\n    if (typeof pipe === 'function') {\n        const pipeResults = pipe(conformedValue, Object.assign({ rawValue: safeValue }, conformToMaskConfig));\n        if (typeof pipeResults === 'string') {\n            conformedValue = pipeResults;\n        }\n    }\n    if (conformedValue === placeholder) {\n        conformedValue = showMask ? placeholder : '';\n    }\n    return conformedValue;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9NYXNrZWRJbnB1dC91dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFHL0MsTUFBTSxZQUFZLEdBQUcsSUFBSSxDQUFDO0FBRTFCLE1BQU0saUJBQWlCLEdBQUcsQ0FBQyxJQUFjLEVBQVksRUFBRTtJQUNyRCxNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUM7SUFFbkIsSUFBSSxnQkFBZ0IsQ0FBQztJQUNyQixPQUFNLGdCQUFnQixHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLEVBQUUsZ0JBQWdCLEtBQUssQ0FBQyxDQUFDLEVBQUUsRUFBRSxzQkFBc0I7UUFDcEcsT0FBTyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBQy9CLElBQUksQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDLENBQUM7S0FDbEM7SUFDRCxPQUFPLElBQUksQ0FBQztBQUNkLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHLENBQ2xDLEtBQXNCLEVBQ3RCLFlBQXNCLEVBQ3RCLEtBQWlCLEVBQ1QsRUFBRTtJQUNWLElBQUksQ0FBQyxZQUFZLEVBQUU7UUFDakIsT0FBTyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7S0FDekI7SUFDRCxJQUFJLEVBQUUsSUFBSSxFQUFFLEdBQUcsS0FBSyxDQUFDO0lBQ3JCLElBQUksU0FBUyxDQUFDO0lBQ2QsSUFBSSxLQUFLLEtBQUssU0FBUyxJQUFJLEtBQUssS0FBSyxJQUFJLEVBQUU7UUFDekMsU0FBUyxHQUFHLEVBQUUsQ0FBQztLQUNoQjtTQUFNO1FBQ0wsU0FBUyxHQUFHLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztLQUM5QjtJQUNELElBQUksSUFBSSxDQUFDO0lBQ1QsSUFDRSxPQUFPLFlBQVksS0FBSyxRQUFRO1FBQy9CLFlBQWdDLENBQUMsSUFBSSxLQUFLLFNBQVM7UUFDbkQsWUFBZ0MsQ0FBQyxJQUFJLEtBQUssU0FBUyxFQUNwRDtRQUNBLDZDQUE2QztRQUM3QyxZQUFZLEdBQUksWUFBZ0MsQ0FBQyxJQUFJLENBQUM7UUFDdEQsQ0FBQyxFQUFFLElBQUksRUFBRSxHQUFHLFlBQStCLENBQUMsQ0FBQztLQUM5QztJQUNELElBQUksT0FBTyxZQUFZLEtBQUssVUFBVSxFQUFFO1FBQ3RDLElBQUksR0FBRyxZQUFZLENBQUMsU0FBUyxrQ0FBTyxLQUFLLEtBQUUsSUFBSSxJQUFHLENBQUM7UUFFbkQsdUNBQXVDO1FBQ3ZDLElBQUksSUFBSSxLQUFLLEtBQUssRUFBRTtZQUNsQixPQUFPLFNBQVMsQ0FBQztTQUNsQjtRQUNELGlEQUFpRDtRQUNqRCxJQUFJLEdBQUcsaUJBQWlCLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDL0IsaUVBQWlFO0tBQ2xFO1NBQU07UUFDTCxJQUFJLEdBQUcsWUFBWSxDQUFDO0tBQ3JCO0lBQ0QsSUFBSSxjQUFjLEdBQUcsU0FBUyxDQUFDO0lBQy9CLE1BQU0sRUFDSixLQUFLLEVBQ0wsZUFBZSxFQUNmLFdBQVcsRUFDWCxvQkFBb0IsRUFDcEIsUUFBUSxFQUNSLGlCQUFpQixHQUNsQixHQUFHLEtBQUssQ0FBQztJQUVWLE1BQU0sbUJBQW1CLEdBQUc7UUFDMUIsbUJBQW1CLEVBQUUsV0FBVztRQUNoQyxLQUFLO1FBQ0wsZUFBZTtRQUNmLElBQUk7UUFDSixvQkFBb0I7UUFDcEIsaUJBQWlCO0tBQ2xCLENBQUM7SUFDRixNQUFNLFNBQVMsR0FBRyxhQUFhLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO0lBQ3RFLElBQUksU0FBUyxFQUFFO1FBQ2IsQ0FBQyxFQUFFLGNBQWMsRUFBRSxHQUFHLFNBQVMsQ0FBQyxDQUFDO0tBQ2xDO0lBQ0QsSUFBSSxPQUFPLElBQUksS0FBSyxVQUFVLEVBQUU7UUFDOUIsTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLGNBQWMsa0JBQ3JDLFFBQVEsRUFBRSxTQUFTLElBQ2hCLG1CQUFtQixFQUN0QixDQUFDO1FBQ0gsSUFBSSxPQUFPLFdBQVcsS0FBSyxRQUFRLEVBQUU7WUFDbkMsY0FBYyxHQUFHLFdBQVcsQ0FBQztTQUM5QjtLQUNGO0lBQ0QsSUFBSSxjQUFjLEtBQUssV0FBVyxFQUFFO1FBQ2xDLGNBQWMsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0tBQzlDO0lBQ0QsT0FBTyxjQUFjLENBQUM7QUFDeEIsQ0FBQyxDQUFDIn0="]},"metadata":{},"sourceType":"module"}