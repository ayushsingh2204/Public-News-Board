{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport { Box, Text } from 'grommet';\nimport { ImageStamp } from '../ImageStamp';\n/**\n * An image with some text, can be used as a user Avatar image<br/>\n * `import { Avatar } from 'grommet-controls;'`<br/>\n * `<Avatar image='...' />`<br/>\n */\n\nconst Avatar = _a => {\n  var {\n    image,\n    title,\n    subTitle\n  } = _a,\n      rest = __rest(_a, [\"image\", \"title\", \"subTitle\"]);\n\n  return React.createElement(Box, {\n    direction: \"row\",\n    align: \"center\",\n    gap: \"small\"\n  }, React.createElement(ImageStamp, Object.assign({\n    src: image,\n    round: \"full\"\n  }, rest)), React.createElement(Box, {\n    justify: \"between\"\n  }, React.createElement(Text, {\n    weight: \"bold\",\n    truncate: true\n  }, title), React.createElement(Text, {\n    size: \"small\",\n    truncate: true\n  }, subTitle)));\n};\n\nexport { Avatar };","map":{"version":3,"sources":["../../../src/components/Avatar/Avatar.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,GAAT,EAAc,IAAd,QAA0B,SAA1B;AACA,SAAS,UAAT,QAA2B,eAA3B;AAGA;;;;AAIG;;AACH,MAAM,MAAM,GAAI,EAAD,IAAsD;MAArD;AAAE,IAAA,KAAF;AAAS,IAAA,KAAT;AAAgB,IAAA;AAAhB,MAAwB,E;MAAK,IAAI,GAAA,MAAA,CAAA,EAAA,EAAjC,CAAA,OAAA,EAAA,OAAA,EAAA,UAAA,CAAiC,C;;AAAqB,SACpE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AAAC,IAAA,SAAS,EAAC,KAAX;AAAiB,IAAA,KAAK,EAAC,QAAvB;AAAgC,IAAA,GAAG,EAAC;AAApC,GAAJ,EACE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,MAAA,CAAA,MAAA,CAAA;AAAC,IAAA,GAAG,EAAE,KAAN;AAAa,IAAA,KAAK,EAAC;AAAnB,GAAA,EAA8B,IAA9B,CAAX,CADF,EAEE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AAAC,IAAA,OAAO,EAAC;AAAT,GAAJ,EACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,IAAA,MAAM,EAAC,MAAR;AAAe,IAAA,QAAQ,EAAE;AAAzB,GAAL,EACG,KADH,CADF,EAIE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,IAAA,IAAI,EAAC,OAAN;AAAc,IAAA,QAAQ,EAAE;AAAxB,GAAL,EACG,QADH,CAJF,CAFF,CADoE;AAYrE,CAZD;;AAcA,SAAS,MAAT","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport { Box, Text } from 'grommet';\nimport { ImageStamp } from '../ImageStamp';\n/**\n * An image with some text, can be used as a user Avatar image<br/>\n * `import { Avatar } from 'grommet-controls;'`<br/>\n * `<Avatar image='...' />`<br/>\n */\nconst Avatar = (_a) => {\n    var { image, title, subTitle } = _a, rest = __rest(_a, [\"image\", \"title\", \"subTitle\"]);\n    return (React.createElement(Box, { direction: \"row\", align: \"center\", gap: \"small\" },\n        React.createElement(ImageStamp, Object.assign({ src: image, round: \"full\" }, rest)),\n        React.createElement(Box, { justify: \"between\" },\n            React.createElement(Text, { weight: \"bold\", truncate: true }, title),\n            React.createElement(Text, { size: \"small\", truncate: true }, subTitle))));\n};\nexport { Avatar };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXZhdGFyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvQXZhdGFyL0F2YXRhci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQSxPQUFPLEtBQUssTUFBTSxPQUFPLENBQUM7QUFDMUIsT0FBTyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFDcEMsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUczQzs7OztHQUlHO0FBQ0gsTUFBTSxNQUFNLEdBQUcsQ0FBQyxFQUFpRCxFQUFFLEVBQUU7UUFBckQsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLFFBQVEsT0FBeUIsRUFBcEIsSUFBSSxjQUFqQyw4QkFBbUMsQ0FBRjtJQUFxQixPQUFBLENBQ3BFLG9CQUFDLEdBQUcsSUFBQyxTQUFTLEVBQUMsS0FBSyxFQUFDLEtBQUssRUFBQyxRQUFRLEVBQUMsR0FBRyxFQUFDLE9BQU87UUFDN0Msb0JBQUMsVUFBVSxrQkFBQyxHQUFHLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBQyxNQUFNLElBQUssSUFBSSxFQUFJO1FBQ2pELG9CQUFDLEdBQUcsSUFBQyxPQUFPLEVBQUMsU0FBUztZQUNwQixvQkFBQyxJQUFJLElBQUMsTUFBTSxFQUFDLE1BQU0sRUFBQyxRQUFRLEVBQUUsSUFBSSxJQUMvQixLQUFLLENBQ0Q7WUFDUCxvQkFBQyxJQUFJLElBQUMsSUFBSSxFQUFDLE9BQU8sRUFBQyxRQUFRLEVBQUUsSUFBSSxJQUM5QixRQUFRLENBQ0osQ0FDSCxDQUNGLENBQ1AsQ0FBQTtDQUFBLENBQUM7QUFFRixPQUFPLEVBQUUsTUFBTSxFQUFFLENBQUMifQ=="]},"metadata":{},"sourceType":"module"}