{"ast":null,"code":"/* eslint-disable no-nested-ternary,no-shadow,no-param-reassign,\nprefer-destructuring,no-mixed-operators */\nimport React, { Component } from 'react';\nimport _ from './utils';\nimport defaultProps from './defaultProps';\nimport { focusNextElement, focusPrevElement } from '../DOM';\nexport default class ReactTable extends Component {\n  constructor(props) {\n    super(props);\n    this.rowRef = [];\n    this.footerRef = null;\n    this.filterRef = null;\n    this.headerRef = null;\n    this.headerGroupsRef = null;\n\n    this.getResolvedState = (props, state) => Object.assign(Object.assign(Object.assign(Object.assign({}, _.compactObject(this.state)), _.compactObject(this.props)), _.compactObject(state)), _.compactObject(props));\n\n    this.fireFetchData = () => {\n      this.props.onFetchData(this.getResolvedState(), this);\n    };\n\n    this.getStateOrProp = key => _.getFirstDefined(this.state[key], this.props[key]);\n\n    this.getMinRows = () => _.getFirstDefined(this.props.minRows, this.getStateOrProp('pageSize')); // User actions\n\n\n    this.onPageChange = page => {\n      const {\n        onPageChange,\n        collapseOnPageChange\n      } = this.props;\n      const newState = {\n        page\n      };\n\n      if (collapseOnPageChange) {\n        newState.expanded = {};\n      }\n\n      this.setStateWithData(newState, this.state, this.props, () => onPageChange && onPageChange(page));\n    };\n\n    this.onPageSizeChange = newPageSize => {\n      const {\n        onPageSizeChange\n      } = this.props;\n      const {\n        pageSize,\n        page\n      } = this.getResolvedState(); // Normalize the page to display\n\n      const currentRow = pageSize * page;\n      const newPage = Math.floor(currentRow / newPageSize);\n      this.setStateWithData({\n        pageSize: newPageSize,\n        page: newPage\n      }, this.state, this.props, () => onPageSizeChange && onPageSizeChange(newPageSize, newPage));\n    };\n\n    this.sortColumn = (column, additive) => {\n      const {\n        sorted,\n        skipNextSort,\n        defaultSortDesc\n      } = this.getResolvedState();\n      const firstSortDirection = Object.prototype.hasOwnProperty.call(column, 'defaultSortDesc') ? column.defaultSortDesc : defaultSortDesc;\n      const secondSortDirection = !firstSortDirection; // we can't stop event propagation from the column resize move handlers\n      // attached to the document because of react's synthetic events\n      // so we have to prevent the sort function from actually sorting\n      // if we click on the column resize element within a header.\n\n      if (skipNextSort) {\n        this.setStateWithData({\n          skipNextSort: false\n        }, this.state, this.props);\n        return;\n      }\n\n      const {\n        onSortedChange\n      } = this.props;\n\n      let newSorted = _.clone(sorted || []).map(d => {\n        d.desc = _.isSortingDesc(d);\n        return d;\n      });\n\n      if (!_.isArray(column)) {\n        // Single-Sort\n        const existingIndex = newSorted.findIndex(d => d.id === column.id);\n\n        if (existingIndex > -1) {\n          const existing = newSorted[existingIndex];\n\n          if (existing.desc === secondSortDirection) {\n            if (additive) {\n              newSorted.splice(existingIndex, 1);\n            } else {\n              existing.desc = firstSortDirection;\n              newSorted = [existing];\n            }\n          } else {\n            existing.desc = secondSortDirection;\n\n            if (!additive) {\n              newSorted = [existing];\n            }\n          }\n        } else if (additive) {\n          newSorted.push({\n            id: column.id,\n            desc: firstSortDirection\n          });\n        } else {\n          newSorted = [{\n            id: column.id,\n            desc: firstSortDirection\n          }];\n        }\n      } else {\n        // Multi-Sort\n        const existingIndex = newSorted.findIndex(d => d.id === column[0].id); // Existing Sorted Column\n\n        if (existingIndex > -1) {\n          const existing = newSorted[existingIndex];\n\n          if (existing.desc === secondSortDirection) {\n            if (additive) {\n              newSorted.splice(existingIndex, column.length);\n            } else {\n              column.forEach((_d, i) => {\n                newSorted[existingIndex + i].desc = firstSortDirection;\n              });\n            }\n          } else {\n            column.forEach((_d, i) => {\n              newSorted[existingIndex + i].desc = secondSortDirection;\n            });\n          }\n\n          if (!additive) {\n            newSorted = newSorted.slice(existingIndex, column.length);\n          } // New Sort Column\n\n        } else if (additive) {\n          newSorted = newSorted.concat(column.map(d => ({\n            id: d.id,\n            desc: firstSortDirection\n          })));\n        } else {\n          newSorted = column.map(d => ({\n            id: d.id,\n            desc: firstSortDirection\n          }));\n        }\n      }\n\n      this.setStateWithData({\n        page: !sorted.length && newSorted.length || !additive ? 0 : this.state.page,\n        sorted: newSorted\n      }, this.state, this.props, () => onSortedChange && onSortedChange(newSorted, column, additive));\n    };\n\n    this.filterColumn = (column, value) => {\n      const {\n        filtered\n      } = this.getResolvedState();\n      const {\n        onFilteredChange\n      } = this.props; // Remove old filter first if it exists\n\n      const newFiltering = (filtered || []).filter(x => x.id !== column.id);\n\n      if (value !== '') {\n        newFiltering.push({\n          id: column.id,\n          value\n        });\n      }\n\n      this.setStateWithData({\n        filtered: newFiltering\n      }, this.state, this.props, () => onFilteredChange && onFilteredChange(newFiltering, column, value));\n    };\n\n    this.resizeColumnStart = (event, column, isTouch) => {\n      event.stopPropagation();\n      const parentWidth = event.target.parentElement.getBoundingClientRect().width;\n      let pageX;\n\n      if (isTouch) {\n        pageX = event.changedTouches[0].pageX;\n      } else {\n        pageX = event.pageX;\n      }\n\n      this.setStateWithData({\n        currentlyResizing: {\n          id: column.id,\n          startX: pageX,\n          parentWidth\n        }\n      }, this.state, this.props, () => {\n        if (isTouch) {\n          document.addEventListener('touchmove', this.resizeColumnMoving);\n          document.addEventListener('touchcancel', this.resizeColumnEnd);\n          document.addEventListener('touchend', this.resizeColumnEnd);\n        } else {\n          document.addEventListener('mousemove', this.resizeColumnMoving);\n          document.addEventListener('mouseup', this.resizeColumnEnd);\n          document.addEventListener('mouseleave', this.resizeColumnEnd);\n        }\n      });\n    };\n\n    this.resizeColumnMoving = event => {\n      event.stopPropagation();\n      const {\n        onResizedChange\n      } = this.props;\n      const {\n        resized,\n        currentlyResizing\n      } = this.getResolvedState(); // Delete old value\n\n      const newResized = resized.filter(x => x.id !== currentlyResizing.id);\n      let pageX;\n\n      if (event.type === 'touchmove') {\n        pageX = event.changedTouches[0].pageX;\n      } else if (event.type === 'mousemove') {\n        pageX = event.pageX;\n      } // Set the min size to 10 to account for margin and border or else the\n      // group headers don't line up correctly\n\n\n      const newWidth = Math.max(currentlyResizing.parentWidth + pageX - currentlyResizing.startX, 11);\n      newResized.push({\n        id: currentlyResizing.id,\n        value: newWidth\n      });\n      this.setStateWithData({\n        resized: newResized\n      }, this.state, this.props, () => onResizedChange && onResizedChange(newResized, event));\n    };\n\n    this.resizeColumnEnd = event => {\n      event.stopPropagation();\n      const isTouch = event.type === 'touchend' || event.type === 'touchcancel';\n\n      if (isTouch) {\n        document.removeEventListener('touchmove', this.resizeColumnMoving);\n        document.removeEventListener('touchcancel', this.resizeColumnEnd);\n        document.removeEventListener('touchend', this.resizeColumnEnd);\n      } // If its a touch event clear the mouse one's as well because sometimes\n      // the mouseDown event gets called as well, but the mouseUp event doesn't\n\n\n      document.removeEventListener('mousemove', this.resizeColumnMoving);\n      document.removeEventListener('mouseup', this.resizeColumnEnd);\n      document.removeEventListener('mouseleave', this.resizeColumnEnd); // The touch events don't propagate up to the sorting's onMouseDown event so\n      // no need to prevent it from happening or else the first click after a touch\n      // event resize will not sort the column.\n\n      if (!isTouch) {\n        this.setStateWithData({\n          skipNextSort: true,\n          currentlyResizing: undefined\n        }, this.state, this.props);\n      }\n    };\n\n    this.rowRef = [];\n    this.state = {\n      page: 0,\n      pageSize: props.defaultPageSize,\n      sorted: props.defaultSorted,\n      expanded: props.defaultExpanded,\n      filtered: props.defaultFiltered,\n      resized: props.defaultResized,\n      currentlyResizing: undefined,\n      skipNextSort: false\n    };\n  }\n\n  componentDidMount() {\n    this.fireFetchData();\n  }\n\n  static getDerivedStateFromProps(nextProps, oldState) {\n    const newState = Object.assign(Object.assign({}, oldState), nextProps); // Do a deep compare of new and old `defaultOption` and\n    // if they are different reset `option = defaultOption`\n\n    const defaultableOptions = ['sorted', 'filtered', 'resized', 'expanded'];\n    defaultableOptions.forEach(x => {\n      const defaultName = `default${x.charAt(0).toUpperCase() + x.slice(1)}`;\n\n      if (JSON.stringify(oldState[defaultName]) !== JSON.stringify(newState[defaultName])) {\n        newState[x] = newState[defaultName];\n      }\n    }); // If they change these table options, we need to reset defaults\n    // or else we could get into a state where the user has changed the UI\n    // and then disabled the ability to change it back.\n    // e.g. If `filterable` has changed, set `filtered = defaultFiltered`\n\n    const resettableOptions = ['sortable', 'filterable', 'resizable'];\n    resettableOptions.forEach(x => {\n      if (oldState[x] !== newState[x]) {\n        const baseName = x.replace('able', '');\n        const optionName = `${baseName}ed`;\n        const defaultName = `default${optionName.charAt(0).toUpperCase() + optionName.slice(1)}`;\n        newState[optionName] = newState[defaultName];\n      }\n    }); // Props that trigger a data update\n\n    if (oldState.data !== newState.data || JSON.stringify(oldState.columns) !== JSON.stringify(newState.columns) || oldState.pivotBy !== newState.pivotBy || oldState.sorted !== newState.sorted || oldState.filtered !== newState.filtered) {\n      return ReactTable.getStateWithData(ReactTable.getDataModel(newState, nextProps), oldState, nextProps);\n    }\n\n    return null;\n  }\n\n  static getStateWithData(newState, oldState, props) {\n    const newResolvedState = Object.assign(Object.assign(Object.assign({}, oldState), newState), props);\n    const {\n      freezeWhenExpanded\n    } = newResolvedState; // Default to unfrozen state\n\n    newResolvedState.frozen = false; // If freezeWhenExpanded is set, check for frozen conditions\n\n    if (freezeWhenExpanded) {\n      // if any rows are expanded, freeze the existing data and sorting\n      const keys = Object.keys(newResolvedState.expanded);\n\n      for (let i = 0; i < keys.length; i += 1) {\n        if (newResolvedState.expanded[keys[i]]) {\n          newResolvedState.frozen = true;\n          break;\n        }\n      }\n    } // If the data isn't frozen and either the data or\n    // sorting model has changed, update the data\n\n\n    if (oldState.frozen && !newResolvedState.frozen || oldState.sorted !== newResolvedState.sorted || oldState.filtered !== newResolvedState.filtered || oldState.showFilters !== newResolvedState.showFilters || !newResolvedState.frozen && oldState.resolvedData !== newResolvedState.resolvedData) {\n      // Handle collapseOnsortedChange & collapseOnDataChange\n      if (oldState.sorted !== newResolvedState.sorted && props.collapseOnSortingChange || oldState.filtered !== newResolvedState.filtered || oldState.showFilters !== newResolvedState.showFilters || oldState.sortedData && !newResolvedState.frozen && oldState.resolvedData !== newResolvedState.resolvedData && props.collapseOnDataChange) {\n        newResolvedState.expanded = {};\n      }\n\n      Object.assign(newResolvedState, ReactTable.getSortedData(newResolvedState, props));\n    } // Set page to 0 if filters change\n\n\n    if (oldState.filtered !== newResolvedState.filtered) {\n      newResolvedState.page = 0;\n    } // Calculate pageSize all the time\n\n\n    if (newResolvedState.sortedData) {\n      newResolvedState.pages = newResolvedState.manual ? newResolvedState.pages : Math.ceil(newResolvedState.sortedData.length / newResolvedState.pageSize);\n      newResolvedState.page = Math.max(newResolvedState.page >= newResolvedState.pages ? newResolvedState.pages - 1 : newResolvedState.page, 0);\n    }\n\n    return newResolvedState;\n  }\n\n  setStateWithData(newState, oldState, props, cb) {\n    const newResolvedState = ReactTable.getStateWithData(newState, oldState, props);\n    return this.setState(newResolvedState, () => {\n      if (cb) {\n        cb();\n      }\n\n      if (oldState.page !== newResolvedState.page || oldState.pageSize !== newResolvedState.pageSize || oldState.sorted !== newResolvedState.sorted || oldState.filtered !== newResolvedState.filtered) {\n        this.fireFetchData();\n      }\n    });\n  }\n\n  render() {\n    const resolvedState = this.getResolvedState();\n    const {\n      getProps,\n      getTableProps,\n      getTheadGroupProps,\n      getTheadGroupTrProps,\n      getTheadProps,\n      getTheadTrProps,\n      getTheadThProps,\n      getTheadFilterProps,\n      getTheadFilterTrProps,\n      getTheadFilterThProps,\n      getFilterInputProps,\n      getTbodyProps,\n      getTrGroupProps,\n      getTrProps,\n      getTdProps,\n      getExpanderProps,\n      getTfootProps,\n      getTfootTrProps,\n      getTfootTdProps,\n      getPaginationProps,\n      getLoadingProps,\n      getNoDataProps,\n      getResizerProps,\n      showPagination,\n      showPaginationTop,\n      showPaginationBottom,\n      manual,\n      loadingText,\n      noDataText,\n      sortable,\n      multiSort,\n      resizable,\n      filterable,\n      // Pivoting State\n      pivotIDKey,\n      pivotValKey,\n      pivotBy,\n      subRowsKey,\n      aggregatedKey,\n      originalKey,\n      indexKey,\n      groupedByPivotKey,\n      expanderTdDefaultProps,\n      // State\n      loading,\n      pageSize,\n      page,\n      sorted,\n      filtered,\n      resized,\n      expanded,\n      pages,\n      onExpandedChange,\n      // Components\n      TableComponent,\n      TheadComponent,\n      TbodyComponent,\n      TrGroupComponent,\n      TrComponent,\n      ThComponent,\n      TdComponent,\n      CellTextComponent,\n      TfootComponent,\n      PaginationComponent,\n      LoadingComponent,\n      SubComponent,\n      NoDataComponent,\n      ResizerComponent,\n      ExpanderComponent,\n      PivotValueComponent,\n      PivotComponent,\n      AggregatedComponent,\n      FilterComponent,\n      PadRowComponent,\n      // Data model\n      resolvedData,\n      allVisibleColumns,\n      headerGroups,\n      hasHeaderGroups,\n      // Sorted Data\n      sortedData\n    } = resolvedState; // Pagination\n\n    const startRow = pageSize * page;\n    const endRow = startRow + pageSize;\n    let pageRows = manual ? resolvedData : sortedData.slice(startRow, endRow);\n    const minRows = this.getMinRows();\n\n    const padRows = _.range(Math.max(minRows - pageRows.length, 0));\n\n    const hasColumnFooter = allVisibleColumns.some(d => d.Footer);\n    const hasFilters = filterable || allVisibleColumns.some(d => d.filterable);\n\n    const recurseRowsViewIndex = (rows, path = [], index = -1) => [rows.map((row, i) => {\n      index += 1;\n      const rowWithViewIndex = Object.assign(Object.assign({}, row), {\n        viewIndex: index\n      });\n      const newPath = path.concat([i]);\n\n      if (rowWithViewIndex[subRowsKey] && _.get(expanded, newPath)) {\n        [rowWithViewIndex[subRowsKey], index] = recurseRowsViewIndex(rowWithViewIndex[subRowsKey], newPath, index);\n      }\n\n      return rowWithViewIndex;\n    }), index];\n\n    [pageRows] = recurseRowsViewIndex(pageRows);\n    const canPrevious = page > 0;\n    const canNext = page + 1 < pages;\n\n    const rowMinWidth = _.sum(allVisibleColumns.map(d => {\n      const resizedColumn = resized.find(x => x.id === d.id) || {\n        id: undefined,\n        value: undefined\n      };\n      return _.getFirstDefined(resizedColumn.value, d.width, d.minWidth);\n    }));\n\n    let rowIndex = -1;\n    const finalState = Object.assign(Object.assign({}, resolvedState), {\n      startRow,\n      endRow,\n      pageRows,\n      minRows,\n      padRows,\n      hasColumnFooter,\n      canPrevious,\n      canNext,\n      rowMinWidth\n    });\n    const rootProps = getProps(finalState, undefined, undefined, this);\n    const tableProps = getTableProps(finalState, undefined, undefined, this);\n    const tBodyProps = getTbodyProps(finalState, undefined, undefined, this);\n    const loadingProps = getLoadingProps(finalState, undefined, undefined, this);\n    const noDataProps = getNoDataProps(finalState, undefined, undefined, this); // Visual Components\n\n    const makeHeaderGroup = (column, i) => {\n      const resizedValue = col => (resized.find(x => x.id === col.id) || {\n        id: undefined,\n        value: undefined\n      }).value;\n\n      const flex = _.sum(column.columns.map(col => col.width || resizedValue(col) ? 0 : col.minWidth));\n\n      const width = _.sum(column.columns.map(col => _.getFirstDefined(resizedValue(col), col.width, col.minWidth)));\n\n      const maxWidth = _.sum(column.columns.map(col => _.getFirstDefined(resizedValue(col), col.width, col.maxWidth)));\n\n      const theadGroupThProps = getTheadGroupProps(finalState, undefined, column, this);\n      const columnHeaderProps = column.getHeaderProps(finalState, undefined, column, this);\n      const rest = Object.assign(Object.assign(Object.assign({}, theadGroupThProps), columnHeaderProps), {\n        CellTextComponent\n      });\n      const flexStyles = {\n        flex: `${flex} 0 auto`,\n        width: _.asPx(width),\n        maxWidth: _.asPx(maxWidth)\n      };\n      return React.createElement(ThComponent, Object.assign({\n        key: `${i}-${column.id}`,\n        style: flexStyles\n      }, rest), _.normalizeComponent(column.Header, {\n        data: sortedData,\n        column\n      }));\n    };\n\n    const selectRow = index => (nextRow, childIndex) => {\n      const selectFirstAvailable = rows => {\n        for (let i = 0; i < rows.length; i += 1) {\n          if (rows[i]) {\n            return rows[i].selectFirstChild(childIndex);\n          }\n        }\n\n        return false;\n      };\n\n      let found;\n\n      if (typeof index === 'number') {\n        const {\n          page,\n          pages\n        } = this.state;\n\n        if (nextRow) {\n          if (pageRows.length > index + 1) {\n            found = this.rowRef[index + 1].selectFirstChild(childIndex);\n          } else if (page < pages - 1) {\n            this.onPageChange(page + 1);\n            found = true;\n          } else {\n            found = selectFirstAvailable([this.footerRef]);\n          }\n        } else if (index > 0) {\n          found = this.rowRef[index - 1].selectFirstChild(childIndex);\n        } else if (page > 0) {\n          this.onPageChange(page - 1);\n          found = true;\n        } else {\n          found = selectFirstAvailable([this.filterRef, this.headerRef, this.headerGroupsRef]);\n        }\n      }\n\n      if (!found) {\n        if (nextRow) {\n          focusNextElement(document);\n        } else {\n          focusPrevElement(document);\n        }\n      }\n    };\n\n    const makeHeaderGroups = () => {\n      const theadGroupProps = getTheadGroupProps(finalState, undefined, undefined, this);\n      const theadGroupTrProps = getTheadGroupTrProps(finalState, undefined, undefined, this);\n      return React.createElement(TheadComponent, Object.assign({\n        style: {\n          minWidth: `${rowMinWidth}px`\n        }\n      }, theadGroupProps), React.createElement(TrComponent, Object.assign({\n        ref: el => {\n          this.headerGroupsRef = el;\n        },\n        selectRow: selectRow('headerGroup')\n      }, theadGroupTrProps), headerGroups.map(makeHeaderGroup)));\n    };\n\n    const makeHeader = (column, i) => {\n      const resizedCol = resized.find(x => x.id === column.id) || {\n        id: undefined,\n        value: undefined\n      };\n      const sort = sorted.find(d => d.id === column.id);\n      const show = typeof column.show === 'function' ? column.show() : column.show;\n\n      const width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n\n      const maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n\n      const theadThProps = getTheadThProps(finalState, undefined, column, this);\n      const columnHeaderProps = column.getHeaderProps(finalState, undefined, column, this);\n      const rest = Object.assign(Object.assign(Object.assign({}, theadThProps), columnHeaderProps), {\n        CellTextComponent\n      });\n\n      const isResizable = _.getFirstDefined(column.resizable, resizable, false);\n\n      const resizer = isResizable ? React.createElement(ResizerComponent, Object.assign({\n        onMouseDown: e => this.resizeColumnStart(e, column, false),\n        onTouchStart: e => this.resizeColumnStart(e, column, true)\n      }, getResizerProps(finalState, undefined, column, this))) : null;\n\n      const isSortable = _.getFirstDefined(column.sortable, sortable, false);\n\n      return React.createElement(ThComponent, Object.assign({\n        key: `${i}-${column.id}`,\n        sort: sort && (sort.desc ? '-sort-desc' : '-sort-asc'),\n        resizable: isResizable,\n        sortable: isSortable,\n        hidden: !show,\n        expander: column.expander,\n        pivot: pivotBy && pivotBy.slice(0, -1).includes(column.id),\n        style: {\n          flex: `${width} 0 auto`,\n          width: _.asPx(width),\n          maxWidth: _.asPx(maxWidth)\n        },\n        toggleSort: e => {\n          if (isSortable) this.sortColumn(column, multiSort ? e.shiftKey : false);\n        }\n      }, rest), _.normalizeComponent(column.Header, {\n        data: sortedData,\n        column\n      }), resizer);\n    };\n\n    const makeHeaders = () => {\n      const theadProps = getTheadProps(finalState, undefined, undefined, this);\n      const theadTrProps = getTheadTrProps(finalState, undefined, undefined, this);\n      return React.createElement(TheadComponent, Object.assign({\n        header: true,\n        style: {\n          minWidth: `${rowMinWidth}px`\n        }\n      }, theadProps), React.createElement(TrComponent, Object.assign({\n        ref: el => {\n          this.headerRef = el;\n        },\n        selectRow: selectRow('header')\n      }, theadTrProps), allVisibleColumns.map(makeHeader)));\n    };\n\n    const makeFilter = (column, i) => {\n      const resizedCol = resized.find(x => x.id === column.id) || {\n        id: undefined,\n        value: undefined\n      };\n\n      const width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n\n      const maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n\n      const theadFilterThProps = getTheadFilterThProps(finalState, undefined, column, this);\n      const filterInputProps = getFilterInputProps(finalState, undefined, column, this);\n      const columnHeaderProps = column.getFilterProps(finalState, undefined, column, this);\n      const rest = Object.assign(Object.assign(Object.assign({}, theadFilterThProps), columnHeaderProps), {\n        CellTextComponent\n      });\n      const filter = filtered.find(filter => filter.id === column.id);\n      const ResolvedFilterComponent = column.Filter || FilterComponent;\n\n      const isFilterable = _.getFirstDefined(column.filterable, filterable, false);\n\n      return React.createElement(ThComponent, Object.assign({\n        key: `${i}-${column.id}`,\n        style: {\n          flex: `${width} 0 auto`,\n          width: _.asPx(width),\n          maxWidth: _.asPx(maxWidth)\n        }\n      }, rest), isFilterable ? _.normalizeComponent(ResolvedFilterComponent, Object.assign(Object.assign({}, filterInputProps), {\n        column,\n        filter,\n        onChange: value => this.filterColumn(column, value)\n      }), undefined) : null);\n    };\n\n    const makeFilters = () => {\n      const theadFilterProps = getTheadFilterProps(finalState, undefined, undefined, this);\n      const theadFilterTrProps = getTheadFilterTrProps(finalState, undefined, undefined, this);\n      return React.createElement(TheadComponent, Object.assign({\n        filters: true,\n        style: {\n          minWidth: `${rowMinWidth}px`\n        }\n      }, theadFilterProps), React.createElement(TrComponent, Object.assign({\n        ref: el => {\n          this.filterRef = el;\n        },\n        selectRow: selectRow('filter')\n      }, theadFilterTrProps), allVisibleColumns.map(makeFilter)));\n    };\n\n    const makePageRow = (row, i, path = []) => {\n      const rowInfo = {\n        original: row[originalKey],\n        row,\n        index: row[indexKey],\n        viewIndex: rowIndex += 1,\n        pageSize,\n        page,\n        level: path.length,\n        nestingPath: path.concat([i]),\n        aggregated: row[aggregatedKey],\n        groupedByPivot: row[groupedByPivotKey],\n        subRows: row[subRowsKey]\n      };\n\n      const isExpanded = _.get(expanded, rowInfo.nestingPath);\n\n      const trGroupProps = getTrGroupProps(finalState, rowInfo, undefined, this);\n      const expanderProps = getExpanderProps(finalState, rowInfo, undefined, this);\n      const trProps = getTrProps(row.viewIndex % 2, finalState, rowInfo, undefined, this);\n      return React.createElement(TrGroupComponent, Object.assign({\n        key: rowInfo.nestingPath.join('_')\n      }, trGroupProps), React.createElement(TrComponent, Object.assign({\n        selectRow: selectRow(i),\n        ref: el => {\n          this.rowRef[i] = el;\n        },\n        rowIndex: row.viewIndex\n      }, trProps), allVisibleColumns.map((column, i2) => {\n        let defaultTdProps = {};\n        const resizedCol = resized.find(x => x.id === column.id) || {\n          id: undefined,\n          value: undefined\n        };\n        const show = typeof column.show === 'function' ? column.show() : column.show;\n\n        const width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n\n        const maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n\n        const tdProps = getTdProps(finalState, rowInfo, column, this);\n        const columnProps = column.getProps(finalState, rowInfo, column);\n        const cellInfo = Object.assign(Object.assign(Object.assign(Object.assign({}, rowInfo), {\n          isExpanded,\n          column: Object.assign({}, column),\n          value: rowInfo.row[column.id],\n          pivoted: column.pivoted,\n          expander: column.expander,\n          expandable: undefined,\n          resized,\n          show,\n          width,\n          maxWidth\n        }), tdProps), columnProps);\n        let value = cellInfo.value;\n        let useOnExpanderClick;\n        let isBranch;\n        let isPreview;\n\n        const onExpanderClick = e => {\n          let newExpanded = _.clone(expanded);\n\n          if (isExpanded) {\n            newExpanded = _.set(newExpanded, cellInfo.nestingPath, false);\n          } else {\n            newExpanded = _.set(newExpanded, cellInfo.nestingPath, {});\n          }\n\n          return this.setStateWithData({\n            expanded: newExpanded\n          }, this.state, this.props, () => onExpandedChange && onExpandedChange(newExpanded, cellInfo.nestingPath, e));\n        }; // Default to a standard cell\n\n\n        if (column.Cell) {\n          value = _.normalizeComponent(column.Cell, cellInfo, value);\n        }\n\n        const cellProps = Object.assign(Object.assign({}, tdProps), columnProps);\n        let resolvedCell = React.createElement(CellTextComponent, Object.assign({\n          value: value\n        }, cellProps)); // Resolve Renderers\n\n        const ResolvedAggregatedComponent = column.Aggregated || (!column.aggregate ? AggregatedComponent : column.Cell);\n        const ResolvedExpanderComponent = column.Expander || ExpanderComponent;\n        const ResolvedPivotValueComponent = column.PivotValue || PivotValueComponent;\n\n        const DefaultResolvedPivotComponent = PivotComponent || (props => React.createElement(React.Fragment, null, React.createElement(ResolvedExpanderComponent, Object.assign({}, Object.assign(Object.assign({}, props), {\n          expanderProps\n        }))), React.createElement(ResolvedPivotValueComponent, Object.assign({}, props))));\n\n        const ResolvedPivotComponent = column.Pivot || DefaultResolvedPivotComponent; // Is this cell expandable?\n\n        if (cellInfo.pivoted || cellInfo.expander) {\n          // Make it expandable by defualt\n          cellInfo.expandable = true;\n          useOnExpanderClick = true; // If pivoted, has no subRows, and does not have a subComponent,\n          // do not make expandable\n\n          if (cellInfo.pivoted && !cellInfo.subRows && !SubComponent) {\n            cellInfo.expandable = false;\n          }\n        }\n\n        if (cellInfo.pivoted) {\n          // Is this column a branch?\n          isBranch = rowInfo.row[pivotIDKey] === column.id && cellInfo.subRows; // Should this column be blank?\n\n          isPreview = pivotBy.indexOf(column.id) > pivotBy.indexOf(rowInfo.row[pivotIDKey]) && cellInfo.subRows; // Pivot Cell Render Override\n\n          if (isBranch) {\n            // isPivot\n            resolvedCell = _.normalizeComponent(ResolvedPivotComponent, Object.assign(Object.assign({}, cellInfo), {\n              value: row[pivotValKey]\n            }), row[pivotValKey]);\n          } else if (isPreview) {\n            // Show the pivot preview\n            resolvedCell = _.normalizeComponent(ResolvedAggregatedComponent, cellInfo, value);\n          } else {\n            resolvedCell = null;\n          }\n        } else if (cellInfo.aggregated) {\n          resolvedCell = _.normalizeComponent(ResolvedAggregatedComponent, cellInfo, value);\n        }\n\n        if (cellInfo.expander) {\n          defaultTdProps = expanderTdDefaultProps;\n          resolvedCell = _.normalizeComponent(ResolvedExpanderComponent, Object.assign(Object.assign({}, cellInfo), {\n            expanderProps\n          }), row[pivotValKey]);\n\n          if (pivotBy) {\n            if (cellInfo.groupedByPivot) {\n              resolvedCell = null;\n            }\n\n            if (!cellInfo.subRows && !SubComponent) {\n              resolvedCell = null;\n            }\n          }\n        }\n\n        const resolvedOnExpanderClick = useOnExpanderClick ? onExpanderClick : () => {}; // If there are multiple onClick events, make sure they don't\n        // override eachother. This should maybe be expanded to handle all\n        // function attributes\n\n        const interactionProps = {\n          onClick: resolvedOnExpanderClick\n        };\n\n        if (tdProps.onClick) {\n          interactionProps.onClick = e => {\n            tdProps.onClick(e, () => resolvedOnExpanderClick(e));\n          };\n        }\n\n        if (columnProps.onClick) {\n          interactionProps.onClick = e => {\n            columnProps.onClick(e, () => resolvedOnExpanderClick(e));\n          };\n        } // Return the cell\n\n\n        return React.createElement(TdComponent // eslint-disable-next-line react/no-array-index-key\n        , Object.assign({\n          // eslint-disable-next-line react/no-array-index-key\n          key: `${i2}-${column.id}`,\n          hidden: !show,\n          style: {\n            flex: `${width} 0 auto`,\n            width: _.asPx(width),\n            maxWidth: _.asPx(maxWidth)\n          }\n        }, tdProps, columnProps, interactionProps, defaultTdProps), resolvedCell);\n      })), rowInfo.subRows && isExpanded && rowInfo.subRows.map((d, i) => makePageRow(d, i, rowInfo.nestingPath)), SubComponent && !rowInfo.subRows && isExpanded && SubComponent(rowInfo));\n    };\n\n    const makePadColumn = (column, i) => {\n      const resizedCol = resized.find(x => x.id === column.id) || {\n        id: undefined,\n        value: undefined\n      };\n      const show = typeof column.show === 'function' ? column.show() : column.show;\n\n      const width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n\n      const flex = width;\n\n      const maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n\n      const tdProps = getTdProps(finalState, undefined, column, this);\n      return React.createElement(TdComponent, Object.assign({\n        key: `${i}-${column.id}`,\n        hidden: !show,\n        style: {\n          flex: `${flex} 0 auto`,\n          width: _.asPx(width),\n          maxWidth: _.asPx(maxWidth)\n        }\n      }, tdProps), _.normalizeComponent(PadRowComponent));\n    };\n\n    const makePadRow = (row, i) => {\n      const trGroupProps = getTrGroupProps(finalState, undefined, undefined, this);\n      const trProps = getTrProps(row.viewIndex % 2, finalState, undefined, undefined, this);\n      return React.createElement(TrGroupComponent, Object.assign({\n        key: i\n      }, trGroupProps), React.createElement(TrComponent, Object.assign({\n        padrow: true,\n        even: (pageRows.length + i) % 2\n      }, trProps), allVisibleColumns.map(makePadColumn)));\n    };\n\n    const makeColumnFooter = (column, i) => {\n      const resizedCol = resized.find(x => x.id === column.id) || {\n        id: undefined,\n        value: undefined\n      };\n      const show = typeof column.show === 'function' ? column.show() : column.show;\n\n      const width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n\n      const maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n\n      const tFootTdProps = getTfootTdProps(finalState, undefined, undefined, this);\n      const columnProps = column.getProps(finalState, undefined, column, this);\n      const columnFooterProps = column.getFooterProps(finalState, undefined, column, this);\n      return React.createElement(TdComponent, Object.assign({\n        key: `${i}-${column.id}`,\n        hidden: !show,\n        style: {\n          flex: `${width} 0 auto`,\n          width: _.asPx(width),\n          maxWidth: _.asPx(maxWidth)\n        }\n      }, columnProps, tFootTdProps, columnFooterProps), _.normalizeComponent(column.Footer, {\n        data: sortedData,\n        column\n      }));\n    };\n\n    const makeColumnFooters = () => {\n      const tFootProps = getTfootProps(finalState, undefined, undefined, this);\n      const tFootTrProps = getTfootTrProps(finalState, undefined, undefined, this);\n      return React.createElement(TfootComponent, Object.assign({\n        style: {\n          minWidth: `${rowMinWidth}px`\n        }\n      }, tFootProps), React.createElement(TrComponent, Object.assign({\n        ref: el => {\n          this.footerRef = el;\n        },\n        selectRow: selectRow('footer')\n      }, tFootTrProps), allVisibleColumns.map(makeColumnFooter)));\n    };\n\n    const makePagination = () => {\n      const paginationProps = getPaginationProps(finalState, undefined, undefined, this);\n      return React.createElement(PaginationComponent, Object.assign({}, resolvedState, {\n        pages: pages,\n        canPrevious: canPrevious,\n        canNext: canNext,\n        onPageChange: this.onPageChange,\n        onPageSizeChange: this.onPageSizeChange\n      }, paginationProps));\n    };\n\n    const makeTable = () => {\n      const pagination = makePagination();\n      return React.createElement(\"div\", Object.assign({}, rootProps), showPagination && showPaginationTop ? React.createElement(\"div\", null, pagination) : null, React.createElement(TableComponent, Object.assign({}, tableProps), hasHeaderGroups ? makeHeaderGroups() : null, makeHeaders(), hasFilters ? makeFilters() : null, React.createElement(TbodyComponent, Object.assign({\n        style: {\n          minWidth: `${rowMinWidth}px`\n        }\n      }, tBodyProps), React.createElement(LoadingComponent, Object.assign({\n        loading: loading,\n        loadingText: loadingText\n      }, loadingProps)), pageRows.map((d, i) => makePageRow(d, i)), padRows.map(makePadRow)), hasColumnFooter ? makeColumnFooters() : null), showPagination && showPaginationBottom ? React.createElement(\"div\", null, pagination) : null, !pageRows.length && !loading && React.createElement(NoDataComponent, Object.assign({}, noDataProps), _.normalizeComponent(noDataText)));\n    }; // childProps are optionally passed to a function-as-a-child\n\n\n    return makeTable();\n  }\n\n}\nReactTable.defaultProps = defaultProps;\n\nReactTable.getDataModel = (newState, props) => {\n  const {\n    columns,\n    pivotBy = [],\n    data,\n    pivotIDKey,\n    pivotValKey,\n    subRowsKey,\n    aggregatedKey,\n    nestingLevelKey,\n    originalKey,\n    indexKey,\n    groupedByPivotKey,\n    SubComponent\n  } = newState; // Determine Header Groups\n\n  let hasHeaderGroups = false;\n  columns.forEach(column => {\n    if (column.columns) {\n      hasHeaderGroups = true;\n    }\n  });\n  let columnsWithExpander = [...columns];\n  let expanderColumn = columns.find(col => col.expander || col.columns && col.columns.some(col2 => col2.expander)); // The actual expander might be in the columns field of a group column\n\n  if (expanderColumn && !expanderColumn.expander) {\n    expanderColumn = expanderColumn.columns.find(col => col.expander);\n  } // If we have SubComponent's we need to make sure we have an expander column\n\n\n  if (SubComponent && !expanderColumn) {\n    expanderColumn = {\n      expander: true\n    };\n    columnsWithExpander = [expanderColumn, ...columnsWithExpander];\n  }\n\n  const makeDecoratedColumn = (column, parentColumn) => {\n    let dcol;\n\n    if (column.expander) {\n      dcol = Object.assign(Object.assign(Object.assign({}, props.column), props.expanderDefaults), column);\n    } else {\n      dcol = Object.assign(Object.assign({}, props.column), column);\n    } // Ensure minWidth is not greater than maxWidth if set\n\n\n    if (dcol.maxWidth < dcol.minWidth) {\n      dcol.minWidth = dcol.maxWidth;\n    }\n\n    if (parentColumn) {\n      dcol.parentColumn = parentColumn;\n    } // First check for string accessor\n\n\n    if (typeof dcol.accessor === 'string') {\n      dcol.id = dcol.id || dcol.accessor;\n      const accessorString = dcol.accessor;\n\n      dcol.accessor = row => _.get(row, accessorString);\n\n      return dcol;\n    } // Fall back to functional accessor (but require an ID)\n\n\n    if (dcol.accessor && !dcol.id) {\n      console.warn(dcol);\n      throw new Error('A column id is required if using a non-string accessor for column above.');\n    } // Fall back to an undefined accessor\n\n\n    if (!dcol.accessor) {\n      dcol.accessor = () => undefined;\n    }\n\n    return dcol;\n  };\n\n  const allDecoratedColumns = []; // Decorate the columns\n\n  const decorateAndAddToAll = (column, parentColumn) => {\n    const decoratedColumn = makeDecoratedColumn(column, parentColumn);\n    allDecoratedColumns.push(decoratedColumn);\n    return decoratedColumn;\n  };\n\n  const decoratedColumns = columnsWithExpander.map(column => {\n    if (column.columns) {\n      return Object.assign(Object.assign({}, column), {\n        columns: column.columns.map(d => decorateAndAddToAll(d, column))\n      });\n    }\n\n    return decorateAndAddToAll(column);\n  }); // Build the visible columns, headers and flat column list\n\n  let visibleColumns = decoratedColumns.slice();\n  let allVisibleColumns = [];\n  visibleColumns = visibleColumns.map(column => {\n    if (column.columns) {\n      const visibleSubColumns = column.columns.filter(d => pivotBy.indexOf(d.id) > -1 ? false : _.getFirstDefined(d.show, true));\n      return Object.assign(Object.assign({}, column), {\n        columns: visibleSubColumns\n      });\n    }\n\n    return column;\n  });\n  visibleColumns = visibleColumns.filter(column => column.columns ? column.columns.length : pivotBy.indexOf(column.id) > -1 ? false : _.getFirstDefined(column.show, true)); // Find any custom pivot location\n\n  const pivotIndex = visibleColumns.findIndex(col => col.pivot); // Handle Pivot Columns\n\n  if (pivotBy.length) {\n    // Retrieve the pivot columns in the correct pivot order\n    const pivotColumns = [];\n    pivotBy.forEach(pivotID => {\n      const found = allDecoratedColumns.find(d => d.id === pivotID);\n\n      if (found) {\n        pivotColumns.push(found);\n      }\n    });\n    const PivotParentColumn = pivotColumns.reduce((prev, current) => prev && prev === current.parentColumn && current.parentColumn, pivotColumns[0].parentColumn);\n    const PivotGroupHeader = hasHeaderGroups && (PivotParentColumn ? PivotParentColumn.Header : pivotColumns[0].PivotHeader || pivotColumns[0].Header);\n    let pivotColumnGroup = {\n      Header: PivotGroupHeader,\n      columns: pivotColumns.map(col => Object.assign(Object.assign(Object.assign({}, props.pivotDefaults), col), {\n        pivoted: true\n      }))\n    }; // Place the pivotColumns back into the visibleColumns\n\n    if (pivotIndex >= 0) {\n      pivotColumnGroup = Object.assign(Object.assign({}, visibleColumns[pivotIndex]), pivotColumnGroup);\n      visibleColumns.splice(pivotIndex, 1, pivotColumnGroup);\n    } else {\n      visibleColumns.unshift(pivotColumnGroup);\n    }\n  } // Build Header Groups\n\n\n  const headerGroups = [];\n  let currentSpan = []; // A convenience function to add a header and reset the currentSpan\n\n  const addHeader = (columns, column) => {\n    headerGroups.push(Object.assign(Object.assign(Object.assign({}, props.column), column), {\n      columns\n    }));\n    currentSpan = [];\n  }; // Build flast list of allVisibleColumns and HeaderGroups\n\n\n  visibleColumns.forEach(column => {\n    if (column.columns) {\n      allVisibleColumns = allVisibleColumns.concat(column.columns);\n\n      if (currentSpan.length > 0) {\n        addHeader(currentSpan);\n      }\n\n      addHeader(column.columns, column);\n      return;\n    }\n\n    allVisibleColumns.push(column);\n    currentSpan.push(column);\n  });\n\n  if (hasHeaderGroups && currentSpan.length > 0) {\n    addHeader(currentSpan);\n  } // Access the data\n\n\n  const accessRow = (d, i, level = 0) => {\n    const row = {\n      [originalKey]: d,\n      [indexKey]: i,\n      [subRowsKey]: d[subRowsKey],\n      [nestingLevelKey]: level\n    };\n    allDecoratedColumns.forEach(column => {\n      if (column.expander) return;\n      row[column.id] = column.accessor(d);\n    });\n\n    if (row[subRowsKey]) {\n      row[subRowsKey] = row[subRowsKey].map((d, i) => accessRow(d, i, level + 1));\n    }\n\n    return row;\n  };\n\n  let resolvedData = data.map((d, i) => accessRow(d, i));\n  const aggregatingColumns = allVisibleColumns.filter(d => !d.expander && d.aggregate); // If pivoting, recursively group the data\n\n  const aggregate = rows => {\n    const aggregationValues = {};\n    aggregatingColumns.forEach(column => {\n      const values = rows.map(d => d[column.id]);\n      aggregationValues[column.id] = column.aggregate(values, rows);\n    });\n    return aggregationValues;\n  };\n\n  if (pivotBy.length) {\n    const groupRecursively = (rows, keys, i = 0) => {\n      // This is the last level, just return the rows\n      if (i === keys.length) {\n        return rows;\n      } // Group the rows together for this level\n\n\n      let groupedRows = Object.entries(_.groupBy(rows, keys[i])).map(([key, value]) => ({\n        [pivotIDKey]: keys[i],\n        [pivotValKey]: key,\n        [keys[i]]: key,\n        [subRowsKey]: value,\n        [nestingLevelKey]: i,\n        [groupedByPivotKey]: true\n      })); // Recurse into the subRows\n\n      groupedRows = groupedRows.map(rowGroup => {\n        const subRows = groupRecursively(rowGroup[subRowsKey], keys, i + 1);\n        return Object.assign(Object.assign(Object.assign({}, rowGroup), {\n          [subRowsKey]: subRows,\n          [aggregatedKey]: true\n        }), aggregate(subRows));\n      });\n      return groupedRows;\n    };\n\n    resolvedData = groupRecursively(resolvedData, pivotBy);\n  }\n\n  return Object.assign(Object.assign({}, newState), {\n    resolvedData,\n    allVisibleColumns,\n    headerGroups,\n    allDecoratedColumns,\n    hasHeaderGroups\n  });\n};\n\nReactTable.getSortedData = (resolvedState, props) => {\n  const {\n    manual,\n    sorted,\n    filtered,\n    defaultFilterMethod,\n    resolvedData,\n    allVisibleColumns,\n    allDecoratedColumns\n  } = resolvedState;\n  const sortMethodsByColumnID = {};\n  allDecoratedColumns.filter(col => col.sortMethod).forEach(col => {\n    sortMethodsByColumnID[col.id] = col.sortMethod;\n  }); // Resolve the data from either manual data or sorted data\n\n  return {\n    sortedData: manual ? resolvedData : ReactTable.sortData(ReactTable.filterData(resolvedData, filtered, defaultFilterMethod, allVisibleColumns, props), sorted, sortMethodsByColumnID, props)\n  };\n};\n\nReactTable.filterData = (data, filtered, defaultFilterMethod, allVisibleColumns, props) => {\n  let filteredData = data;\n\n  if (filtered.length) {\n    filteredData = filtered.reduce((filteredSoFar, nextFilter) => {\n      const column = allVisibleColumns.find(x => x.id === nextFilter.id); // Don't filter hidden columns or columns that have had their filters disabled\n\n      if (!column || column.filterable === false) {\n        return filteredSoFar;\n      }\n\n      const filterMethod = column.filterMethod || defaultFilterMethod; // If 'filterAll' is set to true, pass the entire dataset to the filter method\n\n      if (column.filterAll) {\n        return filterMethod(nextFilter, filteredSoFar, column);\n      }\n\n      return filteredSoFar.filter(row => filterMethod(nextFilter, row, column));\n    }, filteredData); // Apply the filter to the subrows if we are pivoting, and then\n    // filter any rows without subcolumns because it would be strange to show\n\n    filteredData = filteredData.map(row => {\n      if (!row[props.subRowsKey]) {\n        return row;\n      }\n\n      return Object.assign(Object.assign({}, row), {\n        [props.subRowsKey]: ReactTable.filterData(row[props.subRowsKey], filtered, defaultFilterMethod, allVisibleColumns, props)\n      });\n    }).filter(row => {\n      if (!row[props.subRowsKey]) {\n        return true;\n      }\n\n      return row[props.subRowsKey].length > 0;\n    });\n  }\n\n  return filteredData;\n};\n\nReactTable.sortData = (data, sorted, sortMethodsByColumnID = {}, props) => {\n  if (!sorted.length) {\n    return data;\n  }\n\n  const sortedData = _.orderBy(data, sorted.map(sort => {\n    // Support custom sorting methods for each column\n    if (sortMethodsByColumnID[sort.id]) {\n      return (a, b) => sortMethodsByColumnID[sort.id](a[sort.id], b[sort.id], sort.desc);\n    }\n\n    return (a, b) => props.defaultSortMethod(a[sort.id], b[sort.id], sort.desc);\n  }), sorted.map(d => !d.desc), props.indexKey);\n\n  sortedData.forEach(row => {\n    if (!row[props.subRowsKey]) {\n      return;\n    }\n\n    row[props.subRowsKey] = ReactTable.sortData(row[props.subRowsKey], sorted, sortMethodsByColumnID, props);\n  });\n  return sortedData;\n};","map":{"version":3,"sources":["../../../../src/components/PagingTable/react-table/ReactTable.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/* eslint-disable no-nested-ternary,no-shadow,no-param-reassign,\nprefer-destructuring,no-mixed-operators */\nimport React, { Component } from 'react';\nimport _ from './utils';\nimport defaultProps from './defaultProps';\nimport { focusNextElement, focusPrevElement } from '../DOM';\nexport default class ReactTable extends Component {\n    constructor(props) {\n        super(props);\n        this.rowRef = [];\n        this.footerRef = null;\n        this.filterRef = null;\n        this.headerRef = null;\n        this.headerGroupsRef = null;\n        this.getResolvedState = (props, state) => (Object.assign(Object.assign(Object.assign(Object.assign({}, _.compactObject(this.state)), _.compactObject(this.props)), _.compactObject(state)), _.compactObject(props)));\n        this.fireFetchData = () => {\n            this.props.onFetchData(this.getResolvedState(), this);\n        };\n        this.getStateOrProp = key => _.getFirstDefined(this.state[key], this.props[key]);\n        this.getMinRows = () => _.getFirstDefined(this.props.minRows, this.getStateOrProp('pageSize'));\n        // User actions\n        this.onPageChange = page => {\n            const { onPageChange, collapseOnPageChange } = this.props;\n            const newState = { page };\n            if (collapseOnPageChange) {\n                newState.expanded = {};\n            }\n            this.setStateWithData(newState, this.state, this.props, () => onPageChange && onPageChange(page));\n        };\n        this.onPageSizeChange = newPageSize => {\n            const { onPageSizeChange } = this.props;\n            const { pageSize, page } = this.getResolvedState();\n            // Normalize the page to display\n            const currentRow = pageSize * page;\n            const newPage = Math.floor(currentRow / newPageSize);\n            this.setStateWithData({\n                pageSize: newPageSize,\n                page: newPage,\n            }, this.state, this.props, () => onPageSizeChange && onPageSizeChange(newPageSize, newPage));\n        };\n        this.sortColumn = (column, additive) => {\n            const { sorted, skipNextSort, defaultSortDesc } = this.getResolvedState();\n            const firstSortDirection = Object.prototype.hasOwnProperty.call(column, 'defaultSortDesc')\n                ? column.defaultSortDesc\n                : defaultSortDesc;\n            const secondSortDirection = !firstSortDirection;\n            // we can't stop event propagation from the column resize move handlers\n            // attached to the document because of react's synthetic events\n            // so we have to prevent the sort function from actually sorting\n            // if we click on the column resize element within a header.\n            if (skipNextSort) {\n                this.setStateWithData({\n                    skipNextSort: false,\n                }, this.state, this.props);\n                return;\n            }\n            const { onSortedChange } = this.props;\n            let newSorted = _.clone(sorted || []).map(d => {\n                d.desc = _.isSortingDesc(d);\n                return d;\n            });\n            if (!_.isArray(column)) {\n                // Single-Sort\n                const existingIndex = newSorted.findIndex(d => d.id === column.id);\n                if (existingIndex > -1) {\n                    const existing = newSorted[existingIndex];\n                    if (existing.desc === secondSortDirection) {\n                        if (additive) {\n                            newSorted.splice(existingIndex, 1);\n                        }\n                        else {\n                            existing.desc = firstSortDirection;\n                            newSorted = [existing];\n                        }\n                    }\n                    else {\n                        existing.desc = secondSortDirection;\n                        if (!additive) {\n                            newSorted = [existing];\n                        }\n                    }\n                }\n                else if (additive) {\n                    newSorted.push({\n                        id: column.id,\n                        desc: firstSortDirection,\n                    });\n                }\n                else {\n                    newSorted = [\n                        {\n                            id: column.id,\n                            desc: firstSortDirection,\n                        },\n                    ];\n                }\n            }\n            else {\n                // Multi-Sort\n                const existingIndex = newSorted.findIndex(d => d.id === column[0].id);\n                // Existing Sorted Column\n                if (existingIndex > -1) {\n                    const existing = newSorted[existingIndex];\n                    if (existing.desc === secondSortDirection) {\n                        if (additive) {\n                            newSorted.splice(existingIndex, column.length);\n                        }\n                        else {\n                            column.forEach((_d, i) => {\n                                newSorted[existingIndex + i].desc = firstSortDirection;\n                            });\n                        }\n                    }\n                    else {\n                        column.forEach((_d, i) => {\n                            newSorted[existingIndex + i].desc = secondSortDirection;\n                        });\n                    }\n                    if (!additive) {\n                        newSorted = newSorted.slice(existingIndex, column.length);\n                    }\n                    // New Sort Column\n                }\n                else if (additive) {\n                    newSorted = newSorted.concat(column.map(d => ({\n                        id: d.id,\n                        desc: firstSortDirection,\n                    })));\n                }\n                else {\n                    newSorted = column.map(d => ({\n                        id: d.id,\n                        desc: firstSortDirection,\n                    }));\n                }\n            }\n            this.setStateWithData({\n                page: (!sorted.length && newSorted.length) || !additive\n                    ? 0\n                    : this.state.page,\n                sorted: newSorted,\n            }, this.state, this.props, () => onSortedChange && onSortedChange(newSorted, column, additive));\n        };\n        this.filterColumn = (column, value) => {\n            const { filtered } = this.getResolvedState();\n            const { onFilteredChange } = this.props;\n            // Remove old filter first if it exists\n            const newFiltering = (filtered || []).filter(x => x.id !== column.id);\n            if (value !== '') {\n                newFiltering.push({\n                    id: column.id,\n                    value,\n                });\n            }\n            this.setStateWithData({\n                filtered: newFiltering,\n            }, this.state, this.props, () => onFilteredChange && onFilteredChange(newFiltering, column, value));\n        };\n        this.resizeColumnStart = (event, column, isTouch) => {\n            event.stopPropagation();\n            const parentWidth = event.target.parentElement.getBoundingClientRect()\n                .width;\n            let pageX;\n            if (isTouch) {\n                pageX = event.changedTouches[0].pageX;\n            }\n            else {\n                pageX = event.pageX;\n            }\n            this.setStateWithData({\n                currentlyResizing: {\n                    id: column.id,\n                    startX: pageX,\n                    parentWidth,\n                },\n            }, this.state, this.props, () => {\n                if (isTouch) {\n                    document.addEventListener('touchmove', this.resizeColumnMoving);\n                    document.addEventListener('touchcancel', this.resizeColumnEnd);\n                    document.addEventListener('touchend', this.resizeColumnEnd);\n                }\n                else {\n                    document.addEventListener('mousemove', this.resizeColumnMoving);\n                    document.addEventListener('mouseup', this.resizeColumnEnd);\n                    document.addEventListener('mouseleave', this.resizeColumnEnd);\n                }\n            });\n        };\n        this.resizeColumnMoving = event => {\n            event.stopPropagation();\n            const { onResizedChange } = this.props;\n            const { resized, currentlyResizing } = this.getResolvedState();\n            // Delete old value\n            const newResized = resized.filter(x => x.id !== currentlyResizing.id);\n            let pageX;\n            if (event.type === 'touchmove') {\n                pageX = event.changedTouches[0].pageX;\n            }\n            else if (event.type === 'mousemove') {\n                pageX = event.pageX;\n            }\n            // Set the min size to 10 to account for margin and border or else the\n            // group headers don't line up correctly\n            const newWidth = Math.max(currentlyResizing.parentWidth + pageX - currentlyResizing.startX, 11);\n            newResized.push({\n                id: currentlyResizing.id,\n                value: newWidth,\n            });\n            this.setStateWithData({\n                resized: newResized,\n            }, this.state, this.props, () => onResizedChange && onResizedChange(newResized, event));\n        };\n        this.resizeColumnEnd = event => {\n            event.stopPropagation();\n            const isTouch = event.type === 'touchend' || event.type === 'touchcancel';\n            if (isTouch) {\n                document.removeEventListener('touchmove', this.resizeColumnMoving);\n                document.removeEventListener('touchcancel', this.resizeColumnEnd);\n                document.removeEventListener('touchend', this.resizeColumnEnd);\n            }\n            // If its a touch event clear the mouse one's as well because sometimes\n            // the mouseDown event gets called as well, but the mouseUp event doesn't\n            document.removeEventListener('mousemove', this.resizeColumnMoving);\n            document.removeEventListener('mouseup', this.resizeColumnEnd);\n            document.removeEventListener('mouseleave', this.resizeColumnEnd);\n            // The touch events don't propagate up to the sorting's onMouseDown event so\n            // no need to prevent it from happening or else the first click after a touch\n            // event resize will not sort the column.\n            if (!isTouch) {\n                this.setStateWithData({\n                    skipNextSort: true,\n                    currentlyResizing: undefined,\n                }, this.state, this.props);\n            }\n        };\n        this.rowRef = [];\n        this.state = {\n            page: 0,\n            pageSize: props.defaultPageSize,\n            sorted: props.defaultSorted,\n            expanded: props.defaultExpanded,\n            filtered: props.defaultFiltered,\n            resized: props.defaultResized,\n            currentlyResizing: undefined,\n            skipNextSort: false,\n        };\n    }\n    componentDidMount() {\n        this.fireFetchData();\n    }\n    static getDerivedStateFromProps(nextProps, oldState) {\n        const newState = Object.assign(Object.assign({}, oldState), nextProps);\n        // Do a deep compare of new and old `defaultOption` and\n        // if they are different reset `option = defaultOption`\n        const defaultableOptions = ['sorted', 'filtered', 'resized', 'expanded'];\n        defaultableOptions.forEach(x => {\n            const defaultName = `default${x.charAt(0).toUpperCase() + x.slice(1)}`;\n            if (JSON.stringify(oldState[defaultName]) !==\n                JSON.stringify(newState[defaultName])) {\n                newState[x] = newState[defaultName];\n            }\n        });\n        // If they change these table options, we need to reset defaults\n        // or else we could get into a state where the user has changed the UI\n        // and then disabled the ability to change it back.\n        // e.g. If `filterable` has changed, set `filtered = defaultFiltered`\n        const resettableOptions = ['sortable', 'filterable', 'resizable'];\n        resettableOptions.forEach(x => {\n            if (oldState[x] !== newState[x]) {\n                const baseName = x.replace('able', '');\n                const optionName = `${baseName}ed`;\n                const defaultName = `default${optionName.charAt(0).toUpperCase() +\n                    optionName.slice(1)}`;\n                newState[optionName] = newState[defaultName];\n            }\n        });\n        // Props that trigger a data update\n        if (oldState.data !== newState.data ||\n            JSON.stringify(oldState.columns) !== JSON.stringify(newState.columns) ||\n            oldState.pivotBy !== newState.pivotBy ||\n            oldState.sorted !== newState.sorted ||\n            oldState.filtered !== newState.filtered) {\n            return ReactTable.getStateWithData(ReactTable.getDataModel(newState, nextProps), oldState, nextProps);\n        }\n        return null;\n    }\n    static getStateWithData(newState, oldState, props) {\n        const newResolvedState = Object.assign(Object.assign(Object.assign({}, oldState), newState), props);\n        const { freezeWhenExpanded } = newResolvedState;\n        // Default to unfrozen state\n        newResolvedState.frozen = false;\n        // If freezeWhenExpanded is set, check for frozen conditions\n        if (freezeWhenExpanded) {\n            // if any rows are expanded, freeze the existing data and sorting\n            const keys = Object.keys(newResolvedState.expanded);\n            for (let i = 0; i < keys.length; i += 1) {\n                if (newResolvedState.expanded[keys[i]]) {\n                    newResolvedState.frozen = true;\n                    break;\n                }\n            }\n        }\n        // If the data isn't frozen and either the data or\n        // sorting model has changed, update the data\n        if ((oldState.frozen && !newResolvedState.frozen) ||\n            oldState.sorted !== newResolvedState.sorted ||\n            oldState.filtered !== newResolvedState.filtered ||\n            oldState.showFilters !== newResolvedState.showFilters ||\n            (!newResolvedState.frozen &&\n                oldState.resolvedData !== newResolvedState.resolvedData)) {\n            // Handle collapseOnsortedChange & collapseOnDataChange\n            if ((oldState.sorted !== newResolvedState.sorted &&\n                props.collapseOnSortingChange) ||\n                oldState.filtered !== newResolvedState.filtered ||\n                oldState.showFilters !== newResolvedState.showFilters ||\n                (oldState.sortedData &&\n                    !newResolvedState.frozen &&\n                    oldState.resolvedData !== newResolvedState.resolvedData &&\n                    props.collapseOnDataChange)) {\n                newResolvedState.expanded = {};\n            }\n            Object.assign(newResolvedState, ReactTable.getSortedData(newResolvedState, props));\n        }\n        // Set page to 0 if filters change\n        if (oldState.filtered !== newResolvedState.filtered) {\n            newResolvedState.page = 0;\n        }\n        // Calculate pageSize all the time\n        if (newResolvedState.sortedData) {\n            newResolvedState.pages = newResolvedState.manual\n                ? newResolvedState.pages\n                : Math.ceil(newResolvedState.sortedData.length / newResolvedState.pageSize);\n            newResolvedState.page = Math.max(newResolvedState.page >= newResolvedState.pages\n                ? newResolvedState.pages - 1\n                : newResolvedState.page, 0);\n        }\n        return newResolvedState;\n    }\n    setStateWithData(newState, oldState, props, cb) {\n        const newResolvedState = ReactTable.getStateWithData(newState, oldState, props);\n        return this.setState(newResolvedState, () => {\n            if (cb) {\n                cb();\n            }\n            if (oldState.page !== newResolvedState.page ||\n                oldState.pageSize !== newResolvedState.pageSize ||\n                oldState.sorted !== newResolvedState.sorted ||\n                oldState.filtered !== newResolvedState.filtered) {\n                this.fireFetchData();\n            }\n        });\n    }\n    render() {\n        const resolvedState = this.getResolvedState();\n        const { getProps, getTableProps, getTheadGroupProps, getTheadGroupTrProps, getTheadProps, getTheadTrProps, getTheadThProps, getTheadFilterProps, getTheadFilterTrProps, getTheadFilterThProps, getFilterInputProps, getTbodyProps, getTrGroupProps, getTrProps, getTdProps, getExpanderProps, getTfootProps, getTfootTrProps, getTfootTdProps, getPaginationProps, getLoadingProps, getNoDataProps, getResizerProps, showPagination, showPaginationTop, showPaginationBottom, manual, loadingText, noDataText, sortable, multiSort, resizable, filterable, \n        // Pivoting State\n        pivotIDKey, pivotValKey, pivotBy, subRowsKey, aggregatedKey, originalKey, indexKey, groupedByPivotKey, expanderTdDefaultProps, \n        // State\n        loading, pageSize, page, sorted, filtered, resized, expanded, pages, onExpandedChange, \n        // Components\n        TableComponent, TheadComponent, TbodyComponent, TrGroupComponent, TrComponent, ThComponent, TdComponent, CellTextComponent, TfootComponent, PaginationComponent, LoadingComponent, SubComponent, NoDataComponent, ResizerComponent, ExpanderComponent, PivotValueComponent, PivotComponent, AggregatedComponent, FilterComponent, PadRowComponent, \n        // Data model\n        resolvedData, allVisibleColumns, headerGroups, hasHeaderGroups, \n        // Sorted Data\n        sortedData, } = resolvedState;\n        // Pagination\n        const startRow = pageSize * page;\n        const endRow = startRow + pageSize;\n        let pageRows = manual ? resolvedData : sortedData.slice(startRow, endRow);\n        const minRows = this.getMinRows();\n        const padRows = _.range(Math.max(minRows - pageRows.length, 0));\n        const hasColumnFooter = allVisibleColumns.some(d => d.Footer);\n        const hasFilters = filterable || allVisibleColumns.some(d => d.filterable);\n        const recurseRowsViewIndex = (rows, path = [], index = -1) => [\n            rows.map((row, i) => {\n                index += 1;\n                const rowWithViewIndex = Object.assign(Object.assign({}, row), { viewIndex: index });\n                const newPath = path.concat([i]);\n                if (rowWithViewIndex[subRowsKey] && _.get(expanded, newPath)) {\n                    [rowWithViewIndex[subRowsKey], index] = recurseRowsViewIndex(rowWithViewIndex[subRowsKey], newPath, index);\n                }\n                return rowWithViewIndex;\n            }),\n            index,\n        ];\n        [pageRows] = recurseRowsViewIndex(pageRows);\n        const canPrevious = page > 0;\n        const canNext = page + 1 < pages;\n        const rowMinWidth = _.sum(allVisibleColumns.map(d => {\n            const resizedColumn = resized.find(x => x.id === d.id) || {\n                id: undefined,\n                value: undefined,\n            };\n            return _.getFirstDefined(resizedColumn.value, d.width, d.minWidth);\n        }));\n        let rowIndex = -1;\n        const finalState = Object.assign(Object.assign({}, resolvedState), { startRow,\n            endRow,\n            pageRows,\n            minRows,\n            padRows,\n            hasColumnFooter,\n            canPrevious,\n            canNext,\n            rowMinWidth });\n        const rootProps = getProps(finalState, undefined, undefined, this);\n        const tableProps = getTableProps(finalState, undefined, undefined, this);\n        const tBodyProps = getTbodyProps(finalState, undefined, undefined, this);\n        const loadingProps = getLoadingProps(finalState, undefined, undefined, this);\n        const noDataProps = getNoDataProps(finalState, undefined, undefined, this);\n        // Visual Components\n        const makeHeaderGroup = (column, i) => {\n            const resizedValue = col => (resized.find(x => x.id === col.id) || {\n                id: undefined,\n                value: undefined,\n            }).value;\n            const flex = _.sum(column.columns.map(col => col.width || resizedValue(col) ? 0 : col.minWidth));\n            const width = _.sum(column.columns.map(col => _.getFirstDefined(resizedValue(col), col.width, col.minWidth)));\n            const maxWidth = _.sum(column.columns.map(col => _.getFirstDefined(resizedValue(col), col.width, col.maxWidth)));\n            const theadGroupThProps = getTheadGroupProps(finalState, undefined, column, this);\n            const columnHeaderProps = column.getHeaderProps(finalState, undefined, column, this);\n            const rest = Object.assign(Object.assign(Object.assign({}, theadGroupThProps), columnHeaderProps), { CellTextComponent });\n            const flexStyles = {\n                flex: `${flex} 0 auto`,\n                width: _.asPx(width),\n                maxWidth: _.asPx(maxWidth),\n            };\n            return (React.createElement(ThComponent, Object.assign({ key: `${i}-${column.id}`, style: flexStyles }, rest), _.normalizeComponent(column.Header, {\n                data: sortedData,\n                column,\n            })));\n        };\n        const selectRow = index => (nextRow, childIndex) => {\n            const selectFirstAvailable = rows => {\n                for (let i = 0; i < rows.length; i += 1) {\n                    if (rows[i]) {\n                        return rows[i].selectFirstChild(childIndex);\n                    }\n                }\n                return false;\n            };\n            let found;\n            if (typeof index === 'number') {\n                const { page, pages } = this.state;\n                if (nextRow) {\n                    if (pageRows.length > index + 1) {\n                        found = this.rowRef[index + 1].selectFirstChild(childIndex);\n                    }\n                    else if (page < pages - 1) {\n                        this.onPageChange(page + 1);\n                        found = true;\n                    }\n                    else {\n                        found = selectFirstAvailable([this.footerRef]);\n                    }\n                }\n                else if (index > 0) {\n                    found = this.rowRef[index - 1].selectFirstChild(childIndex);\n                }\n                else if (page > 0) {\n                    this.onPageChange(page - 1);\n                    found = true;\n                }\n                else {\n                    found = selectFirstAvailable([\n                        this.filterRef,\n                        this.headerRef,\n                        this.headerGroupsRef,\n                    ]);\n                }\n            }\n            if (!found) {\n                if (nextRow) {\n                    focusNextElement(document);\n                }\n                else {\n                    focusPrevElement(document);\n                }\n            }\n        };\n        const makeHeaderGroups = () => {\n            const theadGroupProps = getTheadGroupProps(finalState, undefined, undefined, this);\n            const theadGroupTrProps = getTheadGroupTrProps(finalState, undefined, undefined, this);\n            return (React.createElement(TheadComponent, Object.assign({ style: { minWidth: `${rowMinWidth}px` } }, theadGroupProps),\n                React.createElement(TrComponent, Object.assign({ ref: el => {\n                        this.headerGroupsRef = el;\n                    }, selectRow: selectRow('headerGroup') }, theadGroupTrProps), headerGroups.map(makeHeaderGroup))));\n        };\n        const makeHeader = (column, i) => {\n            const resizedCol = resized.find(x => x.id === column.id) || {\n                id: undefined,\n                value: undefined,\n            };\n            const sort = sorted.find(d => d.id === column.id);\n            const show = typeof column.show === 'function' ? column.show() : column.show;\n            const width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n            const maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n            const theadThProps = getTheadThProps(finalState, undefined, column, this);\n            const columnHeaderProps = column.getHeaderProps(finalState, undefined, column, this);\n            const rest = Object.assign(Object.assign(Object.assign({}, theadThProps), columnHeaderProps), { CellTextComponent });\n            const isResizable = _.getFirstDefined(column.resizable, resizable, false);\n            const resizer = isResizable ? (React.createElement(ResizerComponent, Object.assign({ onMouseDown: e => this.resizeColumnStart(e, column, false), onTouchStart: e => this.resizeColumnStart(e, column, true) }, getResizerProps(finalState, undefined, column, this)))) : null;\n            const isSortable = _.getFirstDefined(column.sortable, sortable, false);\n            return (React.createElement(ThComponent, Object.assign({ key: `${i}-${column.id}`, sort: sort && (sort.desc ? '-sort-desc' : '-sort-asc'), resizable: isResizable, sortable: isSortable, hidden: !show, expander: column.expander, pivot: pivotBy && pivotBy.slice(0, -1).includes(column.id), style: {\n                    flex: `${width} 0 auto`,\n                    width: _.asPx(width),\n                    maxWidth: _.asPx(maxWidth),\n                }, toggleSort: e => {\n                    if (isSortable)\n                        this.sortColumn(column, multiSort ? e.shiftKey : false);\n                } }, rest),\n                _.normalizeComponent(column.Header, {\n                    data: sortedData,\n                    column,\n                }),\n                resizer));\n        };\n        const makeHeaders = () => {\n            const theadProps = getTheadProps(finalState, undefined, undefined, this);\n            const theadTrProps = getTheadTrProps(finalState, undefined, undefined, this);\n            return (React.createElement(TheadComponent, Object.assign({ header: true, style: {\n                    minWidth: `${rowMinWidth}px`,\n                } }, theadProps),\n                React.createElement(TrComponent, Object.assign({ ref: el => {\n                        this.headerRef = el;\n                    }, selectRow: selectRow('header') }, theadTrProps), allVisibleColumns.map(makeHeader))));\n        };\n        const makeFilter = (column, i) => {\n            const resizedCol = resized.find(x => x.id === column.id) || {\n                id: undefined,\n                value: undefined,\n            };\n            const width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n            const maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n            const theadFilterThProps = getTheadFilterThProps(finalState, undefined, column, this);\n            const filterInputProps = getFilterInputProps(finalState, undefined, column, this);\n            const columnHeaderProps = column.getFilterProps(finalState, undefined, column, this);\n            const rest = Object.assign(Object.assign(Object.assign({}, theadFilterThProps), columnHeaderProps), { CellTextComponent });\n            const filter = filtered.find(filter => filter.id === column.id);\n            const ResolvedFilterComponent = column.Filter || FilterComponent;\n            const isFilterable = _.getFirstDefined(column.filterable, filterable, false);\n            return (React.createElement(ThComponent, Object.assign({ key: `${i}-${column.id}`, style: {\n                    flex: `${width} 0 auto`,\n                    width: _.asPx(width),\n                    maxWidth: _.asPx(maxWidth),\n                } }, rest), isFilterable\n                ? _.normalizeComponent(ResolvedFilterComponent, Object.assign(Object.assign({}, filterInputProps), { column,\n                    filter, onChange: value => this.filterColumn(column, value) }), undefined)\n                : null));\n        };\n        const makeFilters = () => {\n            const theadFilterProps = getTheadFilterProps(finalState, undefined, undefined, this);\n            const theadFilterTrProps = getTheadFilterTrProps(finalState, undefined, undefined, this);\n            return (React.createElement(TheadComponent, Object.assign({ filters: true, style: {\n                    minWidth: `${rowMinWidth}px`,\n                } }, theadFilterProps),\n                React.createElement(TrComponent, Object.assign({ ref: el => {\n                        this.filterRef = el;\n                    }, selectRow: selectRow('filter') }, theadFilterTrProps), allVisibleColumns.map(makeFilter))));\n        };\n        const makePageRow = (row, i, path = []) => {\n            const rowInfo = {\n                original: row[originalKey],\n                row,\n                index: row[indexKey],\n                viewIndex: rowIndex += 1,\n                pageSize,\n                page,\n                level: path.length,\n                nestingPath: path.concat([i]),\n                aggregated: row[aggregatedKey],\n                groupedByPivot: row[groupedByPivotKey],\n                subRows: row[subRowsKey],\n            };\n            const isExpanded = _.get(expanded, rowInfo.nestingPath);\n            const trGroupProps = getTrGroupProps(finalState, rowInfo, undefined, this);\n            const expanderProps = getExpanderProps(finalState, rowInfo, undefined, this);\n            const trProps = getTrProps(row.viewIndex % 2, finalState, rowInfo, undefined, this);\n            return (React.createElement(TrGroupComponent, Object.assign({ key: rowInfo.nestingPath.join('_') }, trGroupProps),\n                React.createElement(TrComponent, Object.assign({ selectRow: selectRow(i), ref: el => {\n                        this.rowRef[i] = el;\n                    }, rowIndex: row.viewIndex }, trProps), allVisibleColumns.map((column, i2) => {\n                    let defaultTdProps = {};\n                    const resizedCol = resized.find(x => x.id === column.id) || {\n                        id: undefined,\n                        value: undefined,\n                    };\n                    const show = typeof column.show === 'function' ? column.show() : column.show;\n                    const width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n                    const maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n                    const tdProps = getTdProps(finalState, rowInfo, column, this);\n                    const columnProps = column.getProps(finalState, rowInfo, column);\n                    const cellInfo = Object.assign(Object.assign(Object.assign(Object.assign({}, rowInfo), { isExpanded, column: Object.assign({}, column), value: rowInfo.row[column.id], pivoted: column.pivoted, expander: column.expander, expandable: undefined, resized,\n                        show,\n                        width,\n                        maxWidth }), tdProps), columnProps);\n                    let value = cellInfo.value;\n                    let useOnExpanderClick;\n                    let isBranch;\n                    let isPreview;\n                    const onExpanderClick = e => {\n                        let newExpanded = _.clone(expanded);\n                        if (isExpanded) {\n                            newExpanded = _.set(newExpanded, cellInfo.nestingPath, false);\n                        }\n                        else {\n                            newExpanded = _.set(newExpanded, cellInfo.nestingPath, {});\n                        }\n                        return this.setStateWithData({\n                            expanded: newExpanded,\n                        }, this.state, this.props, () => onExpandedChange &&\n                            onExpandedChange(newExpanded, cellInfo.nestingPath, e));\n                    };\n                    // Default to a standard cell\n                    if (column.Cell) {\n                        value = _.normalizeComponent(column.Cell, cellInfo, value);\n                    }\n                    const cellProps = Object.assign(Object.assign({}, tdProps), columnProps);\n                    let resolvedCell = (React.createElement(CellTextComponent, Object.assign({ value: value }, cellProps)));\n                    // Resolve Renderers\n                    const ResolvedAggregatedComponent = column.Aggregated ||\n                        (!column.aggregate ? AggregatedComponent : column.Cell);\n                    const ResolvedExpanderComponent = column.Expander || ExpanderComponent;\n                    const ResolvedPivotValueComponent = column.PivotValue || PivotValueComponent;\n                    const DefaultResolvedPivotComponent = PivotComponent ||\n                        (props => (React.createElement(React.Fragment, null,\n                            React.createElement(ResolvedExpanderComponent, Object.assign({}, Object.assign(Object.assign({}, props), { expanderProps }))),\n                            React.createElement(ResolvedPivotValueComponent, Object.assign({}, props)))));\n                    const ResolvedPivotComponent = column.Pivot || DefaultResolvedPivotComponent;\n                    // Is this cell expandable?\n                    if (cellInfo.pivoted || cellInfo.expander) {\n                        // Make it expandable by defualt\n                        cellInfo.expandable = true;\n                        useOnExpanderClick = true;\n                        // If pivoted, has no subRows, and does not have a subComponent,\n                        // do not make expandable\n                        if (cellInfo.pivoted && !cellInfo.subRows && !SubComponent) {\n                            cellInfo.expandable = false;\n                        }\n                    }\n                    if (cellInfo.pivoted) {\n                        // Is this column a branch?\n                        isBranch =\n                            rowInfo.row[pivotIDKey] === column.id && cellInfo.subRows;\n                        // Should this column be blank?\n                        isPreview =\n                            pivotBy.indexOf(column.id) >\n                                pivotBy.indexOf(rowInfo.row[pivotIDKey]) &&\n                                cellInfo.subRows;\n                        // Pivot Cell Render Override\n                        if (isBranch) {\n                            // isPivot\n                            resolvedCell = _.normalizeComponent(ResolvedPivotComponent, Object.assign(Object.assign({}, cellInfo), { value: row[pivotValKey] }), row[pivotValKey]);\n                        }\n                        else if (isPreview) {\n                            // Show the pivot preview\n                            resolvedCell = _.normalizeComponent(ResolvedAggregatedComponent, cellInfo, value);\n                        }\n                        else {\n                            resolvedCell = null;\n                        }\n                    }\n                    else if (cellInfo.aggregated) {\n                        resolvedCell = _.normalizeComponent(ResolvedAggregatedComponent, cellInfo, value);\n                    }\n                    if (cellInfo.expander) {\n                        defaultTdProps = expanderTdDefaultProps;\n                        resolvedCell = _.normalizeComponent(ResolvedExpanderComponent, Object.assign(Object.assign({}, cellInfo), { expanderProps }), row[pivotValKey]);\n                        if (pivotBy) {\n                            if (cellInfo.groupedByPivot) {\n                                resolvedCell = null;\n                            }\n                            if (!cellInfo.subRows && !SubComponent) {\n                                resolvedCell = null;\n                            }\n                        }\n                    }\n                    const resolvedOnExpanderClick = useOnExpanderClick\n                        ? onExpanderClick\n                        : () => { };\n                    // If there are multiple onClick events, make sure they don't\n                    // override eachother. This should maybe be expanded to handle all\n                    // function attributes\n                    const interactionProps = {\n                        onClick: resolvedOnExpanderClick,\n                    };\n                    if (tdProps.onClick) {\n                        interactionProps.onClick = e => {\n                            tdProps.onClick(e, () => resolvedOnExpanderClick(e));\n                        };\n                    }\n                    if (columnProps.onClick) {\n                        interactionProps.onClick = e => {\n                            columnProps.onClick(e, () => resolvedOnExpanderClick(e));\n                        };\n                    }\n                    // Return the cell\n                    return (React.createElement(TdComponent\n                    // eslint-disable-next-line react/no-array-index-key\n                    , Object.assign({ \n                        // eslint-disable-next-line react/no-array-index-key\n                        key: `${i2}-${column.id}`, hidden: !show, style: {\n                            flex: `${width} 0 auto`,\n                            width: _.asPx(width),\n                            maxWidth: _.asPx(maxWidth),\n                        } }, tdProps, columnProps, interactionProps, defaultTdProps), resolvedCell));\n                })),\n                rowInfo.subRows &&\n                    isExpanded &&\n                    rowInfo.subRows.map((d, i) => makePageRow(d, i, rowInfo.nestingPath)),\n                SubComponent &&\n                    !rowInfo.subRows &&\n                    isExpanded &&\n                    SubComponent(rowInfo)));\n        };\n        const makePadColumn = (column, i) => {\n            const resizedCol = resized.find(x => x.id === column.id) || {\n                id: undefined,\n                value: undefined,\n            };\n            const show = typeof column.show === 'function' ? column.show() : column.show;\n            const width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n            const flex = width;\n            const maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n            const tdProps = getTdProps(finalState, undefined, column, this);\n            return (React.createElement(TdComponent, Object.assign({ key: `${i}-${column.id}`, hidden: !show, style: {\n                    flex: `${flex} 0 auto`,\n                    width: _.asPx(width),\n                    maxWidth: _.asPx(maxWidth),\n                } }, tdProps), _.normalizeComponent(PadRowComponent)));\n        };\n        const makePadRow = (row, i) => {\n            const trGroupProps = getTrGroupProps(finalState, undefined, undefined, this);\n            const trProps = getTrProps(row.viewIndex % 2, finalState, undefined, undefined, this);\n            return (React.createElement(TrGroupComponent, Object.assign({ key: i }, trGroupProps),\n                React.createElement(TrComponent, Object.assign({ padrow: true, even: (pageRows.length + i) % 2 }, trProps), allVisibleColumns.map(makePadColumn))));\n        };\n        const makeColumnFooter = (column, i) => {\n            const resizedCol = resized.find(x => x.id === column.id) || {\n                id: undefined,\n                value: undefined,\n            };\n            const show = typeof column.show === 'function' ? column.show() : column.show;\n            const width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n            const maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n            const tFootTdProps = getTfootTdProps(finalState, undefined, undefined, this);\n            const columnProps = column.getProps(finalState, undefined, column, this);\n            const columnFooterProps = column.getFooterProps(finalState, undefined, column, this);\n            return (React.createElement(TdComponent, Object.assign({ key: `${i}-${column.id}`, hidden: !show, style: {\n                    flex: `${width} 0 auto`,\n                    width: _.asPx(width),\n                    maxWidth: _.asPx(maxWidth),\n                } }, columnProps, tFootTdProps, columnFooterProps), _.normalizeComponent(column.Footer, {\n                data: sortedData,\n                column,\n            })));\n        };\n        const makeColumnFooters = () => {\n            const tFootProps = getTfootProps(finalState, undefined, undefined, this);\n            const tFootTrProps = getTfootTrProps(finalState, undefined, undefined, this);\n            return (React.createElement(TfootComponent, Object.assign({ style: {\n                    minWidth: `${rowMinWidth}px`,\n                } }, tFootProps),\n                React.createElement(TrComponent, Object.assign({ ref: el => {\n                        this.footerRef = el;\n                    }, selectRow: selectRow('footer') }, tFootTrProps), allVisibleColumns.map(makeColumnFooter))));\n        };\n        const makePagination = () => {\n            const paginationProps = getPaginationProps(finalState, undefined, undefined, this);\n            return (React.createElement(PaginationComponent, Object.assign({}, resolvedState, { pages: pages, canPrevious: canPrevious, canNext: canNext, onPageChange: this.onPageChange, onPageSizeChange: this.onPageSizeChange }, paginationProps)));\n        };\n        const makeTable = () => {\n            const pagination = makePagination();\n            return (React.createElement(\"div\", Object.assign({}, rootProps),\n                showPagination && showPaginationTop ? React.createElement(\"div\", null, pagination) : null,\n                React.createElement(TableComponent, Object.assign({}, tableProps),\n                    hasHeaderGroups ? makeHeaderGroups() : null,\n                    makeHeaders(),\n                    hasFilters ? makeFilters() : null,\n                    React.createElement(TbodyComponent, Object.assign({ style: {\n                            minWidth: `${rowMinWidth}px`,\n                        } }, tBodyProps),\n                        React.createElement(LoadingComponent, Object.assign({ loading: loading, loadingText: loadingText }, loadingProps)),\n                        pageRows.map((d, i) => makePageRow(d, i)),\n                        padRows.map(makePadRow)),\n                    hasColumnFooter ? makeColumnFooters() : null),\n                showPagination && showPaginationBottom ? (React.createElement(\"div\", null, pagination)) : null,\n                !pageRows.length && !loading && (React.createElement(NoDataComponent, Object.assign({}, noDataProps), _.normalizeComponent(noDataText)))));\n        };\n        // childProps are optionally passed to a function-as-a-child\n        return makeTable();\n    }\n}\nReactTable.defaultProps = defaultProps;\nReactTable.getDataModel = (newState, props) => {\n    const { columns, pivotBy = [], data, pivotIDKey, pivotValKey, subRowsKey, aggregatedKey, nestingLevelKey, originalKey, indexKey, groupedByPivotKey, SubComponent, } = newState;\n    // Determine Header Groups\n    let hasHeaderGroups = false;\n    columns.forEach(column => {\n        if (column.columns) {\n            hasHeaderGroups = true;\n        }\n    });\n    let columnsWithExpander = [...columns];\n    let expanderColumn = columns.find(col => col.expander ||\n        (col.columns && col.columns.some(col2 => col2.expander)));\n    // The actual expander might be in the columns field of a group column\n    if (expanderColumn && !expanderColumn.expander) {\n        expanderColumn = expanderColumn.columns.find(col => col.expander);\n    }\n    // If we have SubComponent's we need to make sure we have an expander column\n    if (SubComponent && !expanderColumn) {\n        expanderColumn = { expander: true };\n        columnsWithExpander = [expanderColumn, ...columnsWithExpander];\n    }\n    const makeDecoratedColumn = (column, parentColumn) => {\n        let dcol;\n        if (column.expander) {\n            dcol = Object.assign(Object.assign(Object.assign({}, props.column), props.expanderDefaults), column);\n        }\n        else {\n            dcol = Object.assign(Object.assign({}, props.column), column);\n        }\n        // Ensure minWidth is not greater than maxWidth if set\n        if (dcol.maxWidth < dcol.minWidth) {\n            dcol.minWidth = dcol.maxWidth;\n        }\n        if (parentColumn) {\n            dcol.parentColumn = parentColumn;\n        }\n        // First check for string accessor\n        if (typeof dcol.accessor === 'string') {\n            dcol.id = dcol.id || dcol.accessor;\n            const accessorString = dcol.accessor;\n            dcol.accessor = row => _.get(row, accessorString);\n            return dcol;\n        }\n        // Fall back to functional accessor (but require an ID)\n        if (dcol.accessor && !dcol.id) {\n            console.warn(dcol);\n            throw new Error('A column id is required if using a non-string accessor for column above.');\n        }\n        // Fall back to an undefined accessor\n        if (!dcol.accessor) {\n            dcol.accessor = () => undefined;\n        }\n        return dcol;\n    };\n    const allDecoratedColumns = [];\n    // Decorate the columns\n    const decorateAndAddToAll = (column, parentColumn) => {\n        const decoratedColumn = makeDecoratedColumn(column, parentColumn);\n        allDecoratedColumns.push(decoratedColumn);\n        return decoratedColumn;\n    };\n    const decoratedColumns = columnsWithExpander.map(column => {\n        if (column.columns) {\n            return Object.assign(Object.assign({}, column), { columns: column.columns.map(d => decorateAndAddToAll(d, column)) });\n        }\n        return decorateAndAddToAll(column);\n    });\n    // Build the visible columns, headers and flat column list\n    let visibleColumns = decoratedColumns.slice();\n    let allVisibleColumns = [];\n    visibleColumns = visibleColumns.map(column => {\n        if (column.columns) {\n            const visibleSubColumns = column.columns.filter(d => pivotBy.indexOf(d.id) > -1 ? false : _.getFirstDefined(d.show, true));\n            return Object.assign(Object.assign({}, column), { columns: visibleSubColumns });\n        }\n        return column;\n    });\n    visibleColumns = visibleColumns.filter(column => column.columns\n        ? column.columns.length\n        : pivotBy.indexOf(column.id) > -1\n            ? false\n            : _.getFirstDefined(column.show, true));\n    // Find any custom pivot location\n    const pivotIndex = visibleColumns.findIndex(col => col.pivot);\n    // Handle Pivot Columns\n    if (pivotBy.length) {\n        // Retrieve the pivot columns in the correct pivot order\n        const pivotColumns = [];\n        pivotBy.forEach(pivotID => {\n            const found = allDecoratedColumns.find(d => d.id === pivotID);\n            if (found) {\n                pivotColumns.push(found);\n            }\n        });\n        const PivotParentColumn = pivotColumns.reduce((prev, current) => prev && prev === current.parentColumn && current.parentColumn, pivotColumns[0].parentColumn);\n        const PivotGroupHeader = hasHeaderGroups &&\n            (PivotParentColumn\n                ? PivotParentColumn.Header\n                : pivotColumns[0].PivotHeader || pivotColumns[0].Header);\n        let pivotColumnGroup = {\n            Header: PivotGroupHeader,\n            columns: pivotColumns.map(col => (Object.assign(Object.assign(Object.assign({}, props.pivotDefaults), col), { pivoted: true }))),\n        };\n        // Place the pivotColumns back into the visibleColumns\n        if (pivotIndex >= 0) {\n            pivotColumnGroup = Object.assign(Object.assign({}, visibleColumns[pivotIndex]), pivotColumnGroup);\n            visibleColumns.splice(pivotIndex, 1, pivotColumnGroup);\n        }\n        else {\n            visibleColumns.unshift(pivotColumnGroup);\n        }\n    }\n    // Build Header Groups\n    const headerGroups = [];\n    let currentSpan = [];\n    // A convenience function to add a header and reset the currentSpan\n    const addHeader = (columns, column) => {\n        headerGroups.push(Object.assign(Object.assign(Object.assign({}, props.column), column), { columns }));\n        currentSpan = [];\n    };\n    // Build flast list of allVisibleColumns and HeaderGroups\n    visibleColumns.forEach(column => {\n        if (column.columns) {\n            allVisibleColumns = allVisibleColumns.concat(column.columns);\n            if (currentSpan.length > 0) {\n                addHeader(currentSpan);\n            }\n            addHeader(column.columns, column);\n            return;\n        }\n        allVisibleColumns.push(column);\n        currentSpan.push(column);\n    });\n    if (hasHeaderGroups && currentSpan.length > 0) {\n        addHeader(currentSpan);\n    }\n    // Access the data\n    const accessRow = (d, i, level = 0) => {\n        const row = {\n            [originalKey]: d,\n            [indexKey]: i,\n            [subRowsKey]: d[subRowsKey],\n            [nestingLevelKey]: level,\n        };\n        allDecoratedColumns.forEach(column => {\n            if (column.expander)\n                return;\n            row[column.id] = column.accessor(d);\n        });\n        if (row[subRowsKey]) {\n            row[subRowsKey] = row[subRowsKey].map((d, i) => accessRow(d, i, level + 1));\n        }\n        return row;\n    };\n    let resolvedData = data.map((d, i) => accessRow(d, i));\n    const aggregatingColumns = allVisibleColumns.filter(d => !d.expander && d.aggregate);\n    // If pivoting, recursively group the data\n    const aggregate = rows => {\n        const aggregationValues = {};\n        aggregatingColumns.forEach(column => {\n            const values = rows.map(d => d[column.id]);\n            aggregationValues[column.id] = column.aggregate(values, rows);\n        });\n        return aggregationValues;\n    };\n    if (pivotBy.length) {\n        const groupRecursively = (rows, keys, i = 0) => {\n            // This is the last level, just return the rows\n            if (i === keys.length) {\n                return rows;\n            }\n            // Group the rows together for this level\n            let groupedRows = Object.entries(_.groupBy(rows, keys[i])).map(([key, value]) => ({\n                [pivotIDKey]: keys[i],\n                [pivotValKey]: key,\n                [keys[i]]: key,\n                [subRowsKey]: value,\n                [nestingLevelKey]: i,\n                [groupedByPivotKey]: true,\n            }));\n            // Recurse into the subRows\n            groupedRows = groupedRows.map(rowGroup => {\n                const subRows = groupRecursively(rowGroup[subRowsKey], keys, i + 1);\n                return Object.assign(Object.assign(Object.assign({}, rowGroup), { [subRowsKey]: subRows, [aggregatedKey]: true }), aggregate(subRows));\n            });\n            return groupedRows;\n        };\n        resolvedData = groupRecursively(resolvedData, pivotBy);\n    }\n    return Object.assign(Object.assign({}, newState), { resolvedData,\n        allVisibleColumns,\n        headerGroups,\n        allDecoratedColumns,\n        hasHeaderGroups });\n};\nReactTable.getSortedData = (resolvedState, props) => {\n    const { manual, sorted, filtered, defaultFilterMethod, resolvedData, allVisibleColumns, allDecoratedColumns, } = resolvedState;\n    const sortMethodsByColumnID = {};\n    allDecoratedColumns\n        .filter(col => col.sortMethod)\n        .forEach(col => {\n        sortMethodsByColumnID[col.id] = col.sortMethod;\n    });\n    // Resolve the data from either manual data or sorted data\n    return {\n        sortedData: manual\n            ? resolvedData\n            : ReactTable.sortData(ReactTable.filterData(resolvedData, filtered, defaultFilterMethod, allVisibleColumns, props), sorted, sortMethodsByColumnID, props),\n    };\n};\nReactTable.filterData = (data, filtered, defaultFilterMethod, allVisibleColumns, props) => {\n    let filteredData = data;\n    if (filtered.length) {\n        filteredData = filtered.reduce((filteredSoFar, nextFilter) => {\n            const column = allVisibleColumns.find(x => x.id === nextFilter.id);\n            // Don't filter hidden columns or columns that have had their filters disabled\n            if (!column || column.filterable === false) {\n                return filteredSoFar;\n            }\n            const filterMethod = column.filterMethod || defaultFilterMethod;\n            // If 'filterAll' is set to true, pass the entire dataset to the filter method\n            if (column.filterAll) {\n                return filterMethod(nextFilter, filteredSoFar, column);\n            }\n            return filteredSoFar.filter(row => filterMethod(nextFilter, row, column));\n        }, filteredData);\n        // Apply the filter to the subrows if we are pivoting, and then\n        // filter any rows without subcolumns because it would be strange to show\n        filteredData = filteredData\n            .map(row => {\n            if (!row[props.subRowsKey]) {\n                return row;\n            }\n            return Object.assign(Object.assign({}, row), { [props.subRowsKey]: ReactTable.filterData(row[props.subRowsKey], filtered, defaultFilterMethod, allVisibleColumns, props) });\n        })\n            .filter(row => {\n            if (!row[props.subRowsKey]) {\n                return true;\n            }\n            return row[props.subRowsKey].length > 0;\n        });\n    }\n    return filteredData;\n};\nReactTable.sortData = (data, sorted, sortMethodsByColumnID = {}, props) => {\n    if (!sorted.length) {\n        return data;\n    }\n    const sortedData = _.orderBy(data, sorted.map(sort => {\n        // Support custom sorting methods for each column\n        if (sortMethodsByColumnID[sort.id]) {\n            return (a, b) => sortMethodsByColumnID[sort.id](a[sort.id], b[sort.id], sort.desc);\n        }\n        return (a, b) => props.defaultSortMethod(a[sort.id], b[sort.id], sort.desc);\n    }), sorted.map(d => !d.desc), props.indexKey);\n    sortedData.forEach(row => {\n        if (!row[props.subRowsKey]) {\n            return;\n        }\n        row[props.subRowsKey] = ReactTable.sortData(row[props.subRowsKey], sorted, sortMethodsByColumnID, props);\n    });\n    return sortedData;\n};\n//# sourceMappingURL=data:application/json;base64,"]},"metadata":{},"sourceType":"module"}