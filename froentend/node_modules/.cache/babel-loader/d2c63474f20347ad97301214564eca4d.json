{"ast":null,"code":"import axios from \"axios\";\nimport { useState } from \"react\";\nvar msg = \"\";\nvar lmsg = '';\nexport async function RegisterUser(data) {\n  await axios.post(\"http://localhost:8080/api/users\", data).then(response => {\n    console.log(response);\n    msg = \"Sucessfully Registered\";\n  }, error => {\n    console.log(error);\n    msg = \"Email Already Exist\";\n  });\n  return msg;\n}\n_c = RegisterUser;\nexport async function FindUser(data) {\n  await axios.post(\"http://localhost:8080/api/users/findUser\", data).then(response => {\n    console.log(response.data);\n\n    if (response.data.user) {\n      sessionStorage.setItem('user', JSON.stringify(response.data.user));\n      lmsg = response.data.msg;\n    } else if (response.data.msg) {\n      lmsg = response.data.msg;\n      console.log(response.data.msg);\n    } else if (response.data.per) {\n      lmsg = response.data.per;\n      console.log(response.data.per);\n    }\n  }, error => {\n    console.log(error);\n  });\n  return lmsg;\n}\n_c2 = FindUser;\nexport async function GetUser(data) {\n  let user;\n  await axios.get(\"http://localhost:80810/api/users/getUser\").then(response => {\n    console.log(response);\n    user = response.data.users;\n  }, error => {\n    console.log(error);\n  });\n  return user;\n}\n_c3 = GetUser;\nexport async function addPermission(data) {\n  await axios.post(\"http://localhost:1337/setPermission\", data).then(response => {\n    console.log(response);\n  }, error => {\n    console.log(error);\n  });\n}\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"RegisterUser\");\n$RefreshReg$(_c2, \"FindUser\");\n$RefreshReg$(_c3, \"GetUser\");","map":{"version":3,"sources":["D:/React Gormmet/react-gormmet/src/call/UserCall.js"],"names":["axios","useState","msg","lmsg","RegisterUser","data","post","then","response","console","log","error","FindUser","user","sessionStorage","setItem","JSON","stringify","per","GetUser","get","users","addPermission"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,IAAIC,GAAG,GAAG,EAAV;AACA,IAAIC,IAAI,GAAC,EAAT;AAEA,OAAO,eAAeC,YAAf,CAA4BC,IAA5B,EAAkC;AACvC,QAAML,KAAK,CAACM,IAAN,CAAW,iCAAX,EAA8CD,IAA9C,EAAoDE,IAApD,CACHC,QAAD,IAAc;AAEVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAN,IAAAA,GAAG,GAAG,wBAAN;AAGH,GAPG,EAQHS,KAAD,IAAW;AACTF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACDT,IAAAA,GAAG,GAAC,qBAAJ;AACA,GAXG,CAAN;AAaA,SAAOA,GAAP;AACD;KAfqBE,Y;AAiBtB,OAAO,eAAeQ,QAAf,CAAwBP,IAAxB,EAA8B;AACnC,QAAML,KAAK,CAACM,IAAN,CAAW,0CAAX,EAAuDD,IAAvD,EAA6DE,IAA7D,CACHC,QAAD,IAAc;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACH,IAArB;;AACD,QAAGG,QAAQ,CAACH,IAAT,CAAcQ,IAAjB,EACA;AAEAC,MAAAA,cAAc,CAACC,OAAf,CAAuB,MAAvB,EAA8BC,IAAI,CAACC,SAAL,CAAeT,QAAQ,CAACH,IAAT,CAAcQ,IAA7B,CAA9B;AACAV,MAAAA,IAAI,GAACK,QAAQ,CAACH,IAAT,CAAcH,GAAnB;AAGC,KAPD,MAQK,IAAGM,QAAQ,CAACH,IAAT,CAAcH,GAAjB,EACL;AAGAC,MAAAA,IAAI,GAACK,QAAQ,CAACH,IAAT,CAAcH,GAAnB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACH,IAAT,CAAcH,GAA1B;AACC,KANI,MAOA,IAAGM,QAAQ,CAACH,IAAT,CAAca,GAAjB,EACL;AACEf,MAAAA,IAAI,GAACK,QAAQ,CAACH,IAAT,CAAca,GAAnB;AACFT,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACH,IAAT,CAAca,GAA1B;AACC;AACF,GAvBG,EAwBHP,KAAD,IAAW;AACTF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,GA1BG,CAAN;AA4BA,SAAOR,IAAP;AACD;MA9BqBS,Q;AAmCtB,OAAO,eAAeO,OAAf,CAAuBd,IAAvB,EAA6B;AAClC,MAAIQ,IAAJ;AACA,QAAMb,KAAK,CAACoB,GAAN,CAAU,0CAAV,EAAsDb,IAAtD,CACHC,QAAD,IAAc;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACDK,IAAAA,IAAI,GAACL,QAAQ,CAACH,IAAT,CAAcgB,KAAnB;AAED,GALG,EAMHV,KAAD,IAAW;AACTF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,GARG,CAAN;AAWA,SAAOE,IAAP;AACD;MAdqBM,O;AAkBtB,OAAO,eAAeG,aAAf,CAA6BjB,IAA7B,EAAmC;AAExC,QAAML,KAAK,CAACM,IAAN,CAAW,qCAAX,EAAiDD,IAAjD,EAAuDE,IAAvD,CACHC,QAAD,IAAc;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAGF,GALG,EAMHG,KAAD,IAAW;AACTF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,GARG,CAAN;AAYD","sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nvar msg = \"\";\r\nvar lmsg='';\r\n\r\nexport async function RegisterUser(data) {\r\n  await axios.post(\"http://localhost:8080/api/users\", data).then(\r\n    (response) => {\r\n     \r\n        console.log(response);\r\n        msg = \"Sucessfully Registered\";\r\n      \r\n     \r\n    },\r\n    (error) => {\r\n      console.log(error)\r\n     msg=\"Email Already Exist\";\r\n    }\r\n  );\r\n  return msg;\r\n}\r\n\r\nexport async function FindUser(data) {\r\n  await axios.post(\"http://localhost:8080/api/users/findUser\", data).then(\r\n    (response) => {\r\n       console.log(response.data)\r\n      if(response.data.user)\r\n      {\r\n          \r\n      sessionStorage.setItem('user',JSON.stringify(response.data.user));\r\n      lmsg=response.data.msg;\r\n      \r\n     \r\n      }\r\n      else if(response.data.msg)\r\n      {\r\n\r\n      \r\n      lmsg=response.data.msg;\r\n      console.log(response.data.msg)\r\n      }\r\n      else if(response.data.per)\r\n      {\r\n        lmsg=response.data.per;\r\n      console.log(response.data.per)\r\n      }\r\n    },\r\n    (error) => {\r\n      console.log(error);\r\n    }\r\n  );\r\n  return lmsg;\r\n}\r\n\r\n\r\n\r\n\r\nexport async function GetUser(data) {\r\n  let user;\r\n  await axios.get(\"http://localhost:80810/api/users/getUser\").then(\r\n    (response) => {\r\n       console.log(response)\r\n      user=response.data.users;\r\n      \r\n    },\r\n    (error) => {\r\n      console.log(error);\r\n    }\r\n  \r\n  );\r\n  return user;\r\n}\r\n\r\n\r\n\r\nexport async function addPermission(data) {\r\n \r\n  await axios.post(\"http://localhost:1337/setPermission\",data).then(\r\n    (response) => {\r\n       console.log(response)\r\n     \r\n      \r\n    },\r\n    (error) => {\r\n      console.log(error);\r\n    }\r\n  \r\n  );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}