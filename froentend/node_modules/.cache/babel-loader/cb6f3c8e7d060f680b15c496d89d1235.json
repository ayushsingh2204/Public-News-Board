{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\React Gormmet\\\\react-gormmet\\\\src\\\\component\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Box, Button, Grommet, Form, FormField, Text, TextInput } from 'grommet';\nimport { grommet } from 'grommet/themes'; // This example shows a way to perform validation across multiple fields.\n\nexport const ULogin = () => {\n  _s();\n\n  const [value, setValue] = React.useState({\n    name: 'a',\n    email: 'b'\n  });\n  const message = value.name && value.email && value.name[0] !== value.email[0] ? 'Mismatched first character' : undefined;\n  return /*#__PURE__*/_jsxDEV(Grommet, {\n    full: true,\n    theme: grommet,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      fill: true,\n      align: \"center\",\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        width: \"medium\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          value: value,\n          onChange: nextValue => setValue(nextValue),\n          onSubmit: ({\n            value: nextValue\n          }) => console.log(nextValue),\n          children: [/*#__PURE__*/_jsxDEV(FormField, {\n            label: \"Name\",\n            name: \"name\",\n            required: true,\n            children: /*#__PURE__*/_jsxDEV(TextInput, {\n              name: \"name\",\n              type: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            label: \"Email\",\n            name: \"email\",\n            required: true,\n            children: /*#__PURE__*/_jsxDEV(TextInput, {\n              name: \"email\",\n              type: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), message && /*#__PURE__*/_jsxDEV(Box, {\n            pad: {\n              horizontal: 'small'\n            },\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              color: \"status-error\",\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            direction: \"row\",\n            justify: \"between\",\n            margin: {\n              top: 'medium'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"reset\",\n              label: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              label: \"Update\",\n              primary: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ULogin, \"4PuoHFFLnmbqLdVmY5s30PLM0Kc=\");\n\n_c = ULogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"ULogin\");","map":{"version":3,"sources":["D:/React Gormmet/react-gormmet/src/component/Login.js"],"names":["React","Box","Button","Grommet","Form","FormField","Text","TextInput","grommet","ULogin","value","setValue","useState","name","email","message","undefined","nextValue","console","log","horizontal","top"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grommet,\r\n  Form,\r\n  FormField,\r\n  Text,\r\n  TextInput,\r\n} from 'grommet';\r\nimport { grommet } from 'grommet/themes';\r\n\r\n// This example shows a way to perform validation across multiple fields.\r\nexport const ULogin = () => {\r\n  const [value, setValue] = React.useState({ name: 'a', email: 'b' });\r\n  const message =\r\n    value.name && value.email && value.name[0] !== value.email[0]\r\n      ? 'Mismatched first character'\r\n      : undefined;\r\n  return (\r\n    <Grommet full theme={grommet}>\r\n      <Box fill align=\"center\" justify=\"center\">\r\n        <Box width=\"medium\">\r\n          <Form\r\n            value={value}\r\n            onChange={nextValue => setValue(nextValue)}\r\n            onSubmit={({ value: nextValue }) => console.log(nextValue)}\r\n          >\r\n            <FormField label=\"Name\" name=\"name\" required>\r\n              <TextInput name=\"name\" type=\"name\" />\r\n            </FormField>\r\n\r\n            <FormField label=\"Email\" name=\"email\" required>\r\n              <TextInput name=\"email\" type=\"email\" />\r\n            </FormField>\r\n\r\n            {message && (\r\n              <Box pad={{ horizontal: 'small' }}>\r\n                <Text color=\"status-error\">{message}</Text>\r\n              </Box>\r\n            )}\r\n\r\n            <Box direction=\"row\" justify=\"between\" margin={{ top: 'medium' }}>\r\n              <Button type=\"reset\" label=\"Reset\" />\r\n              <Button type=\"submit\" label=\"Update\" primary />\r\n            </Box>\r\n          </Form>\r\n        </Box>\r\n      </Box>\r\n    </Grommet>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}