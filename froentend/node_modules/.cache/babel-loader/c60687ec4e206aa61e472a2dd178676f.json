{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.themeDoc = exports.doc = void 0;\n\nvar _reactDesc = require(\"react-desc\");\n\nvar _mixins = require(\"../../utils/mixins\");\n\nvar doc = function doc(Tip) {\n  var DocumentedTip = (0, _reactDesc.describe)(Tip).availableAt((0, _mixins.getAvailableAtBadge)('Tip', 'Controls')).description(\"Tooltip or a hint when hovering over an element. The tooltip will render \\n      when hovering on top of the Tip's child node or string.\").usage(\"import { Tip } from 'grommet';\\n<Tip />\");\n  DocumentedTip.propTypes = {\n    content: _reactDesc.PropTypes.node.description(\"The tooltip content inside the drop.\"),\n    dropProps: _reactDesc.PropTypes.object.description('Any valid Drop prop to style the Tip drop container.').defaultValue({\n      plain: true,\n      trapFocus: false\n    }),\n    plain: _reactDesc.PropTypes.bool.description(\"Whether content should have default styling.\").defaultValue(undefined)\n  };\n  return DocumentedTip;\n};\n\nexports.doc = doc;\nvar themeDoc = {\n  'tip.content': {\n    description: 'Any valid Box property for the Tip container.',\n    type: 'object',\n    defaultValue: \"{ background: 'background-contrast', elevation: 'small', \\n    margin: 'xsmall', pad: { vertical: 'xsmall', horizontal: 'small' }, \\n    round: 'small'}\"\n  },\n  'tip.drop': {\n    description: 'Any valid Drop property for the Tooltip.',\n    type: 'object',\n    defaultValue: \"{align: { top: 'bottom' }}\"\n  }\n};\nexports.themeDoc = themeDoc;","map":{"version":3,"sources":["D:/React Gormmet/react-gormmet/node_modules/grommet/components/Tip/doc.js"],"names":["exports","__esModule","themeDoc","doc","_reactDesc","require","_mixins","Tip","DocumentedTip","describe","availableAt","getAvailableAtBadge","description","usage","propTypes","content","PropTypes","node","dropProps","object","defaultValue","plain","trapFocus","bool","undefined","type"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,QAAR,GAAmBF,OAAO,CAACG,GAAR,GAAc,KAAK,CAAtC;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,YAAD,CAAxB;;AAEA,IAAIC,OAAO,GAAGD,OAAO,CAAC,oBAAD,CAArB;;AAEA,IAAIF,GAAG,GAAG,SAASA,GAAT,CAAaI,GAAb,EAAkB;AAC1B,MAAIC,aAAa,GAAG,CAAC,GAAGJ,UAAU,CAACK,QAAf,EAAyBF,GAAzB,EAA8BG,WAA9B,CAA0C,CAAC,GAAGJ,OAAO,CAACK,mBAAZ,EAAiC,KAAjC,EAAwC,UAAxC,CAA1C,EAA+FC,WAA/F,CAA2G,0IAA3G,EAAuPC,KAAvP,CAA6P,yCAA7P,CAApB;AACAL,EAAAA,aAAa,CAACM,SAAd,GAA0B;AACxBC,IAAAA,OAAO,EAAEX,UAAU,CAACY,SAAX,CAAqBC,IAArB,CAA0BL,WAA1B,CAAsC,sCAAtC,CADe;AAExBM,IAAAA,SAAS,EAAEd,UAAU,CAACY,SAAX,CAAqBG,MAArB,CAA4BP,WAA5B,CAAwC,sDAAxC,EAAgGQ,YAAhG,CAA6G;AACtHC,MAAAA,KAAK,EAAE,IAD+G;AAEtHC,MAAAA,SAAS,EAAE;AAF2G,KAA7G,CAFa;AAMxBD,IAAAA,KAAK,EAAEjB,UAAU,CAACY,SAAX,CAAqBO,IAArB,CAA0BX,WAA1B,CAAsC,8CAAtC,EAAsFQ,YAAtF,CAAmGI,SAAnG;AANiB,GAA1B;AAQA,SAAOhB,aAAP;AACD,CAXD;;AAaAR,OAAO,CAACG,GAAR,GAAcA,GAAd;AACA,IAAID,QAAQ,GAAG;AACb,iBAAe;AACbU,IAAAA,WAAW,EAAE,+CADA;AAEba,IAAAA,IAAI,EAAE,QAFO;AAGbL,IAAAA,YAAY,EAAE;AAHD,GADF;AAMb,cAAY;AACVR,IAAAA,WAAW,EAAE,0CADH;AAEVa,IAAAA,IAAI,EAAE,QAFI;AAGVL,IAAAA,YAAY,EAAE;AAHJ;AANC,CAAf;AAYApB,OAAO,CAACE,QAAR,GAAmBA,QAAnB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.themeDoc = exports.doc = void 0;\n\nvar _reactDesc = require(\"react-desc\");\n\nvar _mixins = require(\"../../utils/mixins\");\n\nvar doc = function doc(Tip) {\n  var DocumentedTip = (0, _reactDesc.describe)(Tip).availableAt((0, _mixins.getAvailableAtBadge)('Tip', 'Controls')).description(\"Tooltip or a hint when hovering over an element. The tooltip will render \\n      when hovering on top of the Tip's child node or string.\").usage(\"import { Tip } from 'grommet';\\n<Tip />\");\n  DocumentedTip.propTypes = {\n    content: _reactDesc.PropTypes.node.description(\"The tooltip content inside the drop.\"),\n    dropProps: _reactDesc.PropTypes.object.description('Any valid Drop prop to style the Tip drop container.').defaultValue({\n      plain: true,\n      trapFocus: false\n    }),\n    plain: _reactDesc.PropTypes.bool.description(\"Whether content should have default styling.\").defaultValue(undefined)\n  };\n  return DocumentedTip;\n};\n\nexports.doc = doc;\nvar themeDoc = {\n  'tip.content': {\n    description: 'Any valid Box property for the Tip container.',\n    type: 'object',\n    defaultValue: \"{ background: 'background-contrast', elevation: 'small', \\n    margin: 'xsmall', pad: { vertical: 'xsmall', horizontal: 'small' }, \\n    round: 'small'}\"\n  },\n  'tip.drop': {\n    description: 'Any valid Drop property for the Tooltip.',\n    type: 'object',\n    defaultValue: \"{align: { top: 'bottom' }}\"\n  }\n};\nexports.themeDoc = themeDoc;"]},"metadata":{},"sourceType":"script"}