{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\React Gormmet\\\\react-gormmet\\\\src\\\\component\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { FormField, TextInput, Box, Button, Form, Heading } from 'grommet'; // This example shows a way to perform validation across multiple fields.\n\nexport const SignUp = () => {\n  _s();\n\n  const [value, setValue] = useState({\n    name: 'a',\n    email: 'b',\n    Username: 'shekhar',\n    password: '',\n    cpassword: '',\n    city: ''\n  });\n\n  const HandleData = event => {\n    console.log(\"reached\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    align: \"center\",\n    justify: \"between\",\n    height: \"90vh\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      margin: (\"top\", \"5vh\"),\n      align: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        value: value,\n        onChange: nextValue => setValue(nextValue),\n        onSubmit: ({\n          value: nextValue\n        }) => console.log(nextValue),\n        children: [/*#__PURE__*/_jsxDEV(FormField, {\n          label: \"Username\",\n          name: \"Username\",\n          required: true,\n          children: /*#__PURE__*/_jsxDEV(TextInput, {\n            name: \"Username\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(FormField, {\n          label: \"Email\",\n          name: \"email\",\n          required: true,\n          children: /*#__PURE__*/_jsxDEV(TextInput, {\n            name: \"email\",\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormField, {\n          label: \"Password\",\n          name: \"password\",\n          required: true,\n          children: /*#__PURE__*/_jsxDEV(TextInput, {\n            name: \"password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormField, {\n          label: \"Password\",\n          name: \"cpassword\",\n          required: true,\n          children: /*#__PURE__*/_jsxDEV(TextInput, {\n            name: \"cpassword\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormField, {\n          label: \"City\",\n          name: \"city\",\n          required: true,\n          children: /*#__PURE__*/_jsxDEV(TextInput, {\n            name: \"city\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormField, {\n          label: \"Mobile No\",\n          name: \"mobile\",\n          required: true,\n          children: /*#__PURE__*/_jsxDEV(TextInput, {\n            name: \"mobil\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          direction: \"row\",\n          justify: \"between\",\n          margin: {\n            top: 'medium'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            label: \"Login\",\n            primary: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"reset\",\n            label: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 6\n  }, this);\n};\n\n_s(SignUp, \"f9h4cqfczOnRY8aQshIFpbtuoKk=\");\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["D:/React Gormmet/react-gormmet/src/component/SignUp.js"],"names":["React","useState","FormField","TextInput","Box","Button","Form","Heading","SignUp","value","setValue","name","email","Username","password","cpassword","city","HandleData","event","console","log","nextValue","top"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { FormField, TextInput, Box, Button, Form, Heading } from 'grommet';\r\n\r\n\r\n\r\n\r\n\r\n\r\n// This example shows a way to perform validation across multiple fields.\r\nexport const SignUp = () => {\r\n    const [value,setValue]=useState({name:'a',email:'b',Username:'shekhar',password:'',cpassword:'',city:''})\r\n    const HandleData=(event)=>{\r\n        console.log(\"reached\");\r\n    }\r\n return(\r\n     <Box align=\"center\" justify=\"between\" height=\"90vh\" >\r\n         <Box margin={\"top\",\"5vh\"} align=\"center\">\r\n         <Heading>Login</Heading>\r\n         <Form\r\n            value={value}\r\n            onChange={nextValue => setValue(nextValue)}\r\n            onSubmit={({ value: nextValue }) => console.log(nextValue)}\r\n          >\r\n             <FormField label=\"Username\" name=\"Username\" required>\r\n              <TextInput name=\"Username\" type=\"text\" />\r\n            </FormField>\r\n            <FormField label=\"Email\" name=\"email\" required>\r\n              <TextInput name=\"email\" type=\"email\" />\r\n            </FormField>\r\n            <FormField label=\"Password\" name=\"password\" required>\r\n              <TextInput name=\"password\" type=\"password\" />\r\n            </FormField>\r\n            <FormField label=\"Password\" name=\"cpassword\" required>\r\n              <TextInput name=\"cpassword\" type=\"password\" />\r\n            </FormField>\r\n            <FormField label=\"City\" name=\"city\" required>\r\n              <TextInput name=\"city\" type=\"text\" />\r\n            </FormField>\r\n            <FormField label=\"Mobile No\" name=\"mobile\" required>\r\n              <TextInput name=\"mobil\" type=\"password\" />\r\n            </FormField>\r\n\r\n            {/* {message && (\r\n              <Box pad={{ horizontal: 'small' }}>\r\n                <Text color=\"status-error\">{message}</Text>\r\n              </Box>\r\n            )} */}\r\n\r\n            <Box direction=\"row\" justify=\"between\" margin={{ top: 'medium' }}>\r\n            <Button type=\"submit\" label=\"Login\" primary />\r\n              <Button type=\"reset\" label=\"Signup\" />\r\n              \r\n            </Box>\r\n          </Form>\r\n    </Box>\r\n    </Box>\r\n );\r\n  \r\n};\r\n"]},"metadata":{},"sourceType":"module"}