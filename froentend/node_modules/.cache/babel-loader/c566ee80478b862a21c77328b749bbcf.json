{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\React Gormmet\\\\react-gormmet\\\\src\\\\component\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { FormField, TextInput, Box, Button, Form, Heading, Text } from 'grommet';\nimport { useHistory } from 'react-router-dom';\nimport { MailOption, Lock } from 'grommet-icons';\nimport { FindUser } from '../call/UserCall'; // This example shows a way to perform validation across multiple fields.\n\nexport const ULogin = () => {\n  _s();\n\n  let history = useHistory();\n  const [value, setValue] = useState({\n    email: '',\n    password: ''\n  });\n  const [message, setMessage] = useState(\"\");\n\n  const HandleData = async event => {\n    console.log(value);\n    let msg = await FindUser(value);\n    setMessage(msg);\n    let role = localStorage.getItem('role');\n    if (role == 'admin') history.push('/Admin');else history.push('/Reporter');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    align: \"center\",\n    justify: \"between\",\n    height: \"90vh\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      margin: (\"top\", \"20vh\"),\n      align: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        value: value,\n        onChange: nextValue => setValue(nextValue),\n        onSubmit: HandleData,\n        children: [/*#__PURE__*/_jsxDEV(FormField, {\n          label: \"Email\",\n          name: \"email\",\n          required: true,\n          children: /*#__PURE__*/_jsxDEV(TextInput, {\n            icon: /*#__PURE__*/_jsxDEV(MailOption, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this),\n            name: \"email\",\n            type: \"email\",\n            pattern: \"[a-z0-9._%+-]{1,40}[@]{1}[a-z]{1,10}[.]{1}[com]{3}\",\n            placeholder: \"abc@gmail.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormField, {\n          label: \"Password\",\n          name: \"password\",\n          required: true,\n          children: /*#__PURE__*/_jsxDEV(TextInput, {\n            icon: /*#__PURE__*/_jsxDEV(Lock, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 32\n            }, this),\n            name: \"password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          direction: \"row\",\n          justify: \"between\",\n          margin: {\n            top: 'medium'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            label: \"Login\",\n            primary: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"Signup\",\n            onClick: () => {\n              history.push('/Signup');\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 10\n      }, this), message && /*#__PURE__*/_jsxDEV(Box, {\n        pad: {\n          horizontal: 'small'\n        },\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          color: \"#00C781\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 6\n  }, this);\n};\n\n_s(ULogin, \"rHw0XvY7AdHokOQkmSesBtfl12o=\", false, function () {\n  return [useHistory];\n});\n\n_c = ULogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"ULogin\");","map":{"version":3,"sources":["D:/React Gormmet/react-gormmet/src/component/Login.js"],"names":["React","useState","FormField","TextInput","Box","Button","Form","Heading","Text","useHistory","MailOption","Lock","FindUser","ULogin","history","value","setValue","email","password","message","setMessage","HandleData","event","console","log","msg","role","localStorage","getItem","push","nextValue","top","horizontal"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,GAA/B,EAAoCC,MAApC,EAA4CC,IAA5C,EAAkDC,OAAlD,EAA2DC,IAA3D,QAAsE,SAAtE;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,eAAjC;AACA,SAAQC,QAAR,QAAuB,kBAAvB,C,CAMA;;AACA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAC1B,MAAIC,OAAO,GAACL,UAAU,EAAtB;AACE,QAAM,CAACM,KAAD,EAAOC,QAAP,IAAiBf,QAAQ,CAAC;AAACgB,IAAAA,KAAK,EAAC,EAAP;AAAUC,IAAAA,QAAQ,EAAC;AAAnB,GAAD,CAA/B;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,EAAD,CAAtC;;AACA,QAAMoB,UAAU,GAAC,MAAOC,KAAP,IAAe;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACA,QAAIU,GAAG,GAAE,MAAMb,QAAQ,CAACG,KAAD,CAAvB;AACAK,IAAAA,UAAU,CAACK,GAAD,CAAV;AACA,QAAIC,IAAI,GAACC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAT;AACA,QAAGF,IAAI,IAAE,OAAT,EACAZ,OAAO,CAACe,IAAR,CAAa,QAAb,EADA,KAGAf,OAAO,CAACe,IAAR,CAAa,WAAb;AACH,GATD;;AAUH,sBACI,QAAC,GAAD;AAAK,IAAA,KAAK,EAAC,QAAX;AAAoB,IAAA,OAAO,EAAC,SAA5B;AAAsC,IAAA,MAAM,EAAC,MAA7C;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,MAAM,GAAE,OAAM,MAAR,CAAX;AAA2B,MAAA,KAAK,EAAC,QAAjC;AAAA,8BACA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,IAAD;AACG,QAAA,KAAK,EAAEd,KADV;AAEG,QAAA,QAAQ,EAAEe,SAAS,IAAId,QAAQ,CAACc,SAAD,CAFlC;AAGG,QAAA,QAAQ,EAAET,UAHb;AAAA,gCAMG,QAAC,SAAD;AAAW,UAAA,KAAK,EAAC,OAAjB;AAAyB,UAAA,IAAI,EAAC,OAA9B;AAAsC,UAAA,QAAQ,MAA9C;AAAA,iCACE,QAAC,SAAD;AAAY,YAAA,IAAI,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,oBAAlB;AAAkC,YAAA,IAAI,EAAC,OAAvC;AAA+C,YAAA,IAAI,EAAC,OAApD;AAA6D,YAAA,OAAO,EAAC,oDAArE;AACM,YAAA,WAAW,EAAC;AADlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANH,eAUG,QAAC,SAAD;AAAW,UAAA,KAAK,EAAC,UAAjB;AAA4B,UAAA,IAAI,EAAC,UAAjC;AAA4C,UAAA,QAAQ,MAApD;AAAA,iCACE,QAAC,SAAD;AAAW,YAAA,IAAI,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,oBAAjB;AAA2B,YAAA,IAAI,EAAC,UAAhC;AAA2C,YAAA,IAAI,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVH,eAgBG,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,KAAf;AAAqB,UAAA,OAAO,EAAC,SAA7B;AAAuC,UAAA,MAAM,EAAE;AAAEU,YAAAA,GAAG,EAAE;AAAP,WAA/C;AAAA,kCACA,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,KAAK,EAAC,OAA5B;AAAoC,YAAA,OAAO;AAA3C;AAAA;AAAA;AAAA;AAAA,kBADA,eAEE,QAAC,MAAD;AAAS,YAAA,KAAK,EAAC,QAAf;AAAwB,YAAA,OAAO,EAAE,MAAI;AAACjB,cAAAA,OAAO,CAACe,IAAR,CAAa,SAAb;AAAwB;AAA9D;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,EAyBEV,OAAO,iBACJ,QAAC,GAAD;AAAK,QAAA,GAAG,EAAE;AAAEa,UAAAA,UAAU,EAAE;AAAd,SAAV;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,SAAZ;AAAA,oBAAuBb;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA1BL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCA,CAlDM;;GAAMN,M;UACCJ,U;;;KADDI,M","sourcesContent":["import React, { useState } from 'react';\r\nimport { FormField, TextInput, Box, Button, Form, Heading ,Text} from 'grommet';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { MailOption, Lock } from 'grommet-icons';\r\nimport {FindUser} from '../call/UserCall'\r\n\r\n\r\n\r\n\r\n\r\n// This example shows a way to perform validation across multiple fields.\r\nexport const ULogin = () => {\r\n  let history=useHistory();\r\n    const [value,setValue]=useState({email:'',password:''})\r\n    const [message, setMessage] = useState(\"\");\r\n    const HandleData=async (event)=>{\r\n        console.log(value);\r\n        let msg= await FindUser(value);\r\n        setMessage(msg);\r\n        let role=localStorage.getItem('role');\r\n        if(role=='admin')\r\n        history.push('/Admin');\r\n        else\r\n        history.push('/Reporter')\r\n    }\r\n return(\r\n     <Box align=\"center\" justify=\"between\" height=\"90vh\" >\r\n         <Box margin={\"top\",\"20vh\"} align=\"center\">\r\n         <Heading>Login</Heading>\r\n         <Form\r\n            value={value}\r\n            onChange={nextValue => setValue(nextValue)}\r\n            onSubmit={HandleData}\r\n          >\r\n            \r\n            <FormField label=\"Email\" name=\"email\" required>\r\n              <TextInput  icon={<MailOption />} name=\"email\" type=\"email\"  pattern=\"[a-z0-9._%+-]{1,40}[@]{1}[a-z]{1,10}[.]{1}[com]{3}\"\r\n                    placeholder=\"abc@gmail.com\"  />\r\n            </FormField>\r\n            <FormField label=\"Password\" name=\"password\" required>\r\n              <TextInput icon={<Lock />} name=\"password\" type=\"password\" />\r\n            </FormField>\r\n\r\n            \r\n\r\n            <Box direction=\"row\" justify=\"between\" margin={{ top: 'medium' }}>\r\n            <Button type=\"submit\" label=\"Login\" primary />\r\n              <Button  label=\"Signup\" onClick={()=>{history.push('/Signup')}}/>\r\n              \r\n            </Box>\r\n           \r\n          </Form>\r\n          {message && (\r\n              <Box pad={{ horizontal: 'small' }}>\r\n                <Text color=\"#00C781\">{message}</Text>\r\n              </Box>\r\n            )}\r\n    </Box>\r\n    </Box>\r\n );\r\n  \r\n};\r\n"]},"metadata":{},"sourceType":"module"}