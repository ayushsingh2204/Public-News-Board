{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\project\\\\src\\\\component\\\\Admin\\\\MostReadNewsStat.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport { PieChart } from 'grommet-controls/chartjs';\nimport { Box, Grommet, Header, ResponsiveContext, Card, CardBody, Grid, Heading } from 'grommet';\nimport { grommet } from 'grommet/themes';\nimport { getMostRead } from '../../services/MostReadNewsStatService/MostReadNewsStatService';\nexport const MostReadNewsStat = () => {\n  _s();\n\n  const [news, setNews] = useState();\n  const size = useContext(ResponsiveContext);\n  useEffect(() => {\n    async function retrieveNews() {\n      await getMostRead().then(result => setNews(result));\n    }\n\n    retrieveNews();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    alignSelf: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      width: \"100vw\",\n      height: \"100vh\",\n      alignContent: \"center\",\n      pad: \"large\",\n      overflow: \"auto\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        columns: size !== 'small' ? 'large' : '100%',\n        gap: \"small\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          height: \"medium\",\n          width: \"large\",\n          background: \"light-1\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            alignSelf: \"center\",\n            size: \"small\",\n            level: \"2\",\n            children: \"Most Read News Statistic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n            pad: \"large\",\n            children: /*#__PURE__*/_jsxDEV(PieChart, {\n              data: {\n                labels: news && news.map(ele => ele.NewsTitle),\n                datasets: [{\n                  label: 'Dataset 1',\n                  data: news && news.map(ele => ele.Count)\n                }]\n              },\n              options: {\n                legend: {\n                  display: false\n                },\n                themedData: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MostReadNewsStat, \"8tISjESjSZt3cAla8Kf/40OfTQs=\");\n\n_c = MostReadNewsStat;\nexport default MostReadNewsStat;\n\nvar _c;\n\n$RefreshReg$(_c, \"MostReadNewsStat\");","map":{"version":3,"sources":["D:/project/src/component/Admin/MostReadNewsStat.js"],"names":["React","useState","useEffect","useContext","PieChart","Box","Grommet","Header","ResponsiveContext","Card","CardBody","Grid","Heading","grommet","getMostRead","MostReadNewsStat","news","setNews","size","retrieveNews","then","result","labels","map","ele","NewsTitle","datasets","label","data","Count","legend","display","themedData"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,SACEC,GADF,EAEEC,OAFF,EAGEC,MAHF,EAIEC,iBAJF,EAKEC,IALF,EAMEC,QANF,EAOEC,IAPF,EAQEC,OARF,QASO,SATP;AAUA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,WAAT,QAA4B,gEAA5B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,EAAhC;AACA,QAAMiB,IAAI,GAAGf,UAAU,CAACK,iBAAD,CAAvB;AACAN,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeiB,YAAf,GAA8B;AAC5B,YAAML,WAAW,GAAGM,IAAd,CAAoBC,MAAD,IAAYJ,OAAO,CAACI,MAAD,CAAtC,CAAN;AACD;;AACDF,IAAAA,YAAY;AACb,GALQ,EAKN,EALM,CAAT;AAOA,sBACE,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACE,QAAC,GAAD;AACE,MAAA,KAAK,EAAC,OADR;AAEE,MAAA,MAAM,EAAC,OAFT;AAGE,MAAA,YAAY,EAAC,QAHf;AAIE,MAAA,GAAG,EAAC,OAJN;AAKE,MAAA,QAAQ,EAAC,MALX;AAAA,6BAOE,QAAC,IAAD;AAAM,QAAA,OAAO,EAAED,IAAI,KAAK,OAAT,GAAmB,OAAnB,GAA6B,MAA5C;AAAoD,QAAA,GAAG,EAAC,OAAxD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,MAAM,EAAC,QAAb;AAAsB,UAAA,KAAK,EAAC,OAA5B;AAAoC,UAAA,UAAU,EAAC,SAA/C;AAAA,kCACE,QAAC,OAAD;AAAS,YAAA,SAAS,EAAC,QAAnB;AAA4B,YAAA,IAAI,EAAC,OAAjC;AAAyC,YAAA,KAAK,EAAC,GAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,QAAD;AAAU,YAAA,GAAG,EAAC,OAAd;AAAA,mCACE,QAAC,QAAD;AACE,cAAA,IAAI,EAAE;AACJI,gBAAAA,MAAM,EAAEN,IAAI,IAAIA,IAAI,CAACO,GAAL,CAAUC,GAAD,IAASA,GAAG,CAACC,SAAtB,CADZ;AAEJC,gBAAAA,QAAQ,EAAE,CACR;AACEC,kBAAAA,KAAK,EAAE,WADT;AAEEC,kBAAAA,IAAI,EAAEZ,IAAI,IAAIA,IAAI,CAACO,GAAL,CAAUC,GAAD,IAASA,GAAG,CAACK,KAAtB;AAFhB,iBADQ;AAFN,eADR;AAUE,cAAA,OAAO,EAAE;AACPC,gBAAAA,MAAM,EAAE;AACNC,kBAAAA,OAAO,EAAE;AADH,iBADD;AAIPC,gBAAAA,UAAU,EAAE;AAJL;AAVX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CA9CM;;GAAMjB,gB;;KAAAA,gB;AAgDb,eAAeA,gBAAf","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect, useContext } from 'react'\r\nimport { PieChart } from 'grommet-controls/chartjs'\r\n\r\nimport {\r\n  Box,\r\n  Grommet,\r\n  Header,\r\n  ResponsiveContext,\r\n  Card,\r\n  CardBody,\r\n  Grid,\r\n  Heading,\r\n} from 'grommet'\r\nimport { grommet } from 'grommet/themes'\r\nimport { getMostRead } from '../../services/MostReadNewsStatService/MostReadNewsStatService'\r\n\r\nexport const MostReadNewsStat = () => {\r\n  const [news, setNews] = useState()\r\n  const size = useContext(ResponsiveContext)\r\n  useEffect(() => {\r\n    async function retrieveNews() {\r\n      await getMostRead().then((result) => setNews(result))\r\n    }\r\n    retrieveNews()\r\n  }, [])\r\n\r\n  return (\r\n    <Box alignSelf='center'>\r\n      <Box\r\n        width='100vw'\r\n        height='100vh'\r\n        alignContent='center'\r\n        pad='large'\r\n        overflow='auto'\r\n      >\r\n        <Grid columns={size !== 'small' ? 'large' : '100%'} gap='small'>\r\n          <Card height='medium' width='large' background='light-1'>\r\n            <Heading alignSelf='center' size='small' level='2'>Most Read News Statistic</Heading>\r\n            <CardBody pad='large'>\r\n              <PieChart\r\n                data={{\r\n                  labels: news && news.map((ele) => ele.NewsTitle),\r\n                  datasets: [\r\n                    {\r\n                      label: 'Dataset 1',\r\n                      data: news && news.map((ele) => ele.Count),\r\n                    },\r\n                  ],\r\n                }}\r\n                options={{\r\n                  legend: {\r\n                    display: false,\r\n                  },\r\n                  themedData: true,\r\n                }}\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n        </Grid>\r\n      </Box>\r\n      </Box>\r\n  )\r\n}\r\n\r\nexport default MostReadNewsStat\r\n"]},"metadata":{},"sourceType":"module"}